(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{567:function(t,s,a){"use strict";a.r(s);var n=a(16),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第-3-章-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第-3-章-基本概念"}},[t._v("#")]),t._v(" 第 3 章 基本概念")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 本章内容")])])]),t._v(" "),a("ul",[a("li",[t._v("语法")]),t._v(" "),a("li",[t._v("数据类型")]),t._v(" "),a("li",[t._v("流控制语句")]),t._v(" "),a("li",[t._v("函数")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 任何语言的核心都必然会描述这门语言最基本的工作原理。")])])]),t._v(" "),a("p",[t._v("而描述的内容通常都要涉及这门语言的语法、操作符、数据类型、内置功能等用于构建复杂解决方案的基本概念。如前所述，ECMA-262 通过叫做 ECMAScript 的“伪语言”为我们描述了 JavaScript 的所有这些基本概念。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 目前，ECMA-262 第 3 版中定义的 ECMAScript 是各浏览器实现最多的一个版本。")])])]),t._v(" "),a("ul",[a("li",[t._v("ECMA-262 第 5 版是浏览器接下来实现的版本，但截止到 2011 年底，还没有浏览器完全实现了这个版本。")])]),t._v(" "),a("h2",{attrs:{id:"_3-1-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-语法"}},[t._v("#")]),t._v(" 3.1 语法")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. ECMAScript 的语法大量借鉴了 C 及其他类 C 语言（如 Java 和 Perl）的语法。")])])]),t._v(" "),a("p",[t._v("熟悉这些语言的开发人员在接受 ECMAScript 更加宽松的语法时，一定会有一种轻松自在的感觉。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-1-区分大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-区分大小写"}},[t._v("#")]),t._v(" 3.1.1 区分大小写")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 要理解的第一个概念：")])])]),t._v(" "),a("p",[t._v("就是 ECMAScript 中的"),a("strong",[t._v("一切（变量、函数名和操作符）都区分大小写")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-2-标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-标识符"}},[t._v("#")]),t._v(" 3.1.2 标识符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 标记符定义：")])])]),t._v(" "),a("p",[t._v("是指变量、函数、属性或者函数的参数的"),a("strong",[t._v("名字")]),t._v("。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 标记符规则：")])])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("第一个字母、下划线（_）或一个美元符号（$）")])])]),t._v(" "),a("li",[a("p",[t._v("字母、下划线、美元符号或数字")])]),t._v(" "),a("li",[a("p",[t._v("按照惯例，ECMAScript 标识符采用驼峰大小写格式")])]),t._v(" "),a("li",[a("p",[t._v("不能把关键字、保留字、true、false 和 null 用作标识符（3.2 节将介绍更多相关内容）")])]),t._v(" "),a("li",[a("p",[t._v("（"),a("strong",[t._v("与 java 区别：字下美人数骆驼，少个人")]),t._v("）")])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-3-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-注释"}},[t._v("#")]),t._v(" 3.1.3 注释")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. ECMAScript 使用 C 风格的注释")])])]),t._v(" "),a("p",[t._v("包括"),a("strong",[t._v("单行注释")]),t._v("和块级注释。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-4-严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-严格模式"}},[t._v("#")]),t._v(" 3.1.4 严格模式")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. ECMAScript 5 引入了严格模式（strict mode）的概念：")])])]),t._v(" "),a("ul",[a("li",[t._v("严格模式是为 JavaScript 定义了一种不同的解析与执行模型。")]),t._v(" "),a("li",[t._v("严格模式下，JavaScript 的执行结果会有很大不同")]),t._v(" "),a("li",[t._v("支持严格模式的浏览器包括 IE10+、Firefox 4+、Safari 5.1+、Opera 12+和 Chrome。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 严格模式用法：")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("整个脚本")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("函数内部")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数体")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-5-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-5-语句"}},[t._v("#")]),t._v(" 3.1.5 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 语句")])])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("语句结尾的分号不是必需的，但我们建议任何时候都不要省略它")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("始终在控制语句中使用代码块")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效但容易出错，不要使用")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推荐使用")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"_3-2-关键字和保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-关键字和保留字"}},[t._v("#")]),t._v(" 3.2 关键字和保留字")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 关键字")])])]),t._v(" "),a("ul",[a("li",[t._v("特定用途。用于表示控制语句的开始或结束，或者用于执行特定操作等")]),t._v(" "),a("li",[t._v("不能用作标识符")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 关键字列表：")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th"),t._v(" "),a("th"),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("break")]),t._v(" "),a("td",[t._v("case")]),t._v(" "),a("td",[t._v("catch")]),t._v(" "),a("td",[t._v("continue")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("debugger")])]),t._v(" "),a("td",[t._v("default")]),t._v(" "),a("td",[a("strong",[t._v("delete")])]),t._v(" "),a("td",[t._v("do")])]),t._v(" "),a("tr",[a("td",[t._v("else")]),t._v(" "),a("td",[t._v("finally")]),t._v(" "),a("td",[t._v("for")]),t._v(" "),a("td",[t._v("function")])]),t._v(" "),a("tr",[a("td",[t._v("if")]),t._v(" "),a("td",[t._v("in")]),t._v(" "),a("td",[a("strong",[t._v("instanceof")])]),t._v(" "),a("td",[t._v("new")])]),t._v(" "),a("tr",[a("td",[t._v("return")]),t._v(" "),a("td",[t._v("switch")]),t._v(" "),a("td",[t._v("this")]),t._v(" "),a("td",[t._v("throw")])]),t._v(" "),a("tr",[a("td",[t._v("try")]),t._v(" "),a("td",[a("strong",[t._v("typeof")])]),t._v(" "),a("td",[t._v("var")]),t._v(" "),a("td",[a("strong",[t._v("void")])])]),t._v(" "),a("tr",[a("td",[t._v("while")]),t._v(" "),a("td",[t._v("with")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 保留字")])])]),t._v(" "),a("ul",[a("li",[t._v("没有任何特定的用途")]),t._v(" "),a("li",[t._v("不能用作标识符")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4. 保留字列表：")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第 3 版")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th"),t._v(" "),a("th"),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("abstract")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("byte")]),t._v(" "),a("td",[t._v("char")])]),t._v(" "),a("tr",[a("td",[t._v("class")]),t._v(" "),a("td",[t._v("const")]),t._v(" "),a("td",[t._v("debugger")]),t._v(" "),a("td",[t._v("double")])]),t._v(" "),a("tr",[a("td",[t._v("enum")]),t._v(" "),a("td",[t._v("export")]),t._v(" "),a("td",[t._v("extends")]),t._v(" "),a("td",[t._v("final")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("goto")]),t._v(" "),a("td",[t._v("implements")]),t._v(" "),a("td",[t._v("import")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("interface")]),t._v(" "),a("td",[t._v("long")]),t._v(" "),a("td",[t._v("native")])]),t._v(" "),a("tr",[a("td",[t._v("package")]),t._v(" "),a("td",[t._v("private")]),t._v(" "),a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("public")])]),t._v(" "),a("tr",[a("td",[t._v("short")]),t._v(" "),a("td",[t._v("static")]),t._v(" "),a("td",[t._v("super")]),t._v(" "),a("td",[t._v("synchronized")])]),t._v(" "),a("tr",[a("td",[t._v("throws")]),t._v(" "),a("td",[t._v("transient")]),t._v(" "),a("td",[t._v("volatile")]),t._v(" "),a("td")])])])]),t._v(" "),a("li",[a("p",[t._v("第 5 版")]),t._v(" "),a("p",[t._v("非严格模式下，第 5 版缩减为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th"),t._v(" "),a("th"),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("class")])]),t._v(" "),a("td",[t._v("const")]),t._v(" "),a("td",[t._v("enum")]),t._v(" "),a("td",[a("strong",[t._v("export")])])]),t._v(" "),a("tr",[a("td",[t._v("extends")]),t._v(" "),a("td",[a("strong",[t._v("import")])]),t._v(" "),a("td",[t._v("super")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("严格模式下，第 5 版还有以下保留字：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th"),t._v(" "),a("th"),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("implements")]),t._v(" "),a("td",[t._v("interface")]),t._v(" "),a("td",[t._v("let")]),t._v(" "),a("td",[t._v("package")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("public")]),t._v(" "),a("td",[t._v("static")])]),t._v(" "),a("tr",[a("td",[t._v("yield")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")])])])]),t._v(" "),a("li",[a("p",[t._v("为了最大程度地保证兼容性，建议读者将第 3 版定义的保留字外加 let 和 yield 作为编程时的参考。")])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("5. 除了上面列出的保留字和关键字")])])]),t._v(" "),a("p",[t._v("ECMA-262 第 5 版对"),a("strong",[t._v("eval")]),t._v(" 和"),a("strong",[t._v("arguments")]),t._v(" 还施加了限制。在严格模式下，这两个名字也不能作为标识符或属性名，否则会抛出错误。")]),t._v(" "),a("h2",{attrs:{id:"_3-3-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-变量"}},[t._v("#")]),t._v(" 3.3 变量")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. ECMAScript 的变量是松散类型的。")])])]),t._v(" "),a("p",[t._v("所谓松散类型就是可以用来保存任何类型的数据。修改变量所保存值的类型在 ECMAScript 中完全有效，但不建议。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmessage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效，但不推荐")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2. var 操作符定义的变量将成为定义该变量的作用域中的局部变量。")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("错误")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误！")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("正确")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hi"')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("虽然省略 var 操作符可以定义全局变量，但这也不是我们推荐的做法。")])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 严格模式下")])])]),t._v(" "),a("ul",[a("li",[t._v("给未经声明的变量赋值会导致抛出 ReferenceError 错误。")]),t._v(" "),a("li",[t._v("不能定义名为 eval 或 arguments 的变量，否则会导致语法错误。")])]),t._v(" "),a("h2",{attrs:{id:"_3-4-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数据类型"}},[t._v("#")]),t._v(" 3.4 数据类型")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 5 种简单数据类型（也称为基本数据类型）：")])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Undefined")])]),t._v(" "),a("li",[a("strong",[t._v("Null")])]),t._v(" "),a("li",[a("strong",[t._v("Boolean")])]),t._v(" "),a("li",[a("strong",[t._v("Number")])]),t._v(" "),a("li",[a("strong",[t._v("String（Array 呢？）")])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 1 种复杂数据类型：")])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Object，Object 本质上是由一组无序的名值对组成的")])])]),t._v(" "),a("h3",{attrs:{id:"_3-4-1-typeof-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-typeof-操作符"}},[t._v("#")]),t._v(" 3.4.1 typeof 操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. typeof 操作符")])])]),t._v(" "),a("p",[a("strong",[t._v("鉴于 ECMAScript 是松散类型的，需要手段来检测变量的数据类型——typeof 操作符")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. typeof 操作符可能返回下列某个字符串：")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v('"undefined"——这个值是未定义')])]),t._v(" "),a("li",[a("p",[t._v('"boolean"——这个值是布尔值')])]),t._v(" "),a("li",[a("p",[t._v('"string"——这个值是字符')])]),t._v(" "),a("li",[a("p",[t._v('"number"——这个值是数值')])]),t._v(" "),a("li",[a("p",[t._v('"object"——这个值是对象或'),a("strong",[t._v("null")])])]),t._v(" "),a("li",[a("p",[t._v('"function"——这个值是'),a("strong",[t._v("函数")])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. typeof 操作符如何使用：")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("typeof 是一个操作符而不是函数")]),t._v("，因此例子中的圆括号尽管可以使用，但不是必需的。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4. typeof 操作符会返回一些令人迷惑但技术上却正确的值：")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v('typeof null，返回"object"')])]),t._v(" "),a("li",[a("p",[t._v('typeof 正则表达式 ，Safari 5 及之前版本、Chrome 7 及之前版本返回"function"，其他浏览器返回"object"。')])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("从技术角度讲，"),a("strong",[t._v("函数在 ECMAScript 中是对象，不是一种数据类型")]),t._v("。然而，"),a("strong",[t._v("函数也确实有一些特殊的属性，因此通过 typeof 操作符来区分函数和其他对象是有必要的")]),t._v("。")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-4-2-undefined-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-undefined-类型"}},[t._v("#")]),t._v(" 3.4.2 Undefined 类型")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. Undefined 类型")])])]),t._v(" "),a("p",[t._v("Undefined 类型"),a("strong",[t._v("只有一个值")]),t._v("：undefined（大写是类型）")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 未经初始化的值默认就会取得 undefined 值：")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("ul",[a("li",[t._v("第 3 版引入这个值是为了正式区分空"),a("strong",[t._v("对象指针")]),t._v("（null）与"),a("strong",[t._v("未经初始化变量")]),t._v("。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 包含 undefined 值的变量与未定义(未声明)的变量是不一样的：")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个变量声明之后默认取得了undefined 值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面这个变量并没有声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var age")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 产生错误")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("对于尚未声明过的变量，只能执行一项操作，即使用 typeof 操作符检测其数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个变量声明之后默认取得了undefined 值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面这个变量并没有声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var age")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4. 无法判断未初始化 or 未声明")])])]),t._v(" "),a("ul",[a("li",[t._v("无法判断"),a("strong",[t._v("未初始化")]),t._v("or"),a("strong",[t._v("未声明")]),t._v("，显式地初始化变量依然是明智的选择，这样我们就知道被检测的变量还没有被声明，而不是尚未初始化。")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-3-null-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-null-类型"}},[t._v("#")]),t._v(" 3.4.3 Null 类型")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. Null 类型")])])]),t._v(" "),a("p",[t._v("Null 类型第二个只有一个值：null。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. null 值表示空对象指针：")])])]),t._v(" "),a("p",[a("strong",[t._v('这正是使用 typeof 操作符检测 null 值时会返回"object"的原因')])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" car "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" car"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("变量保存对象最好初始化为 null 而不是其他值。这样直接检查 null 值知变量是否已经保存了一个对象的引用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("car "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对car 对象执行某些操作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("实际上，"),a("strong",[t._v("undefined 值是派生自 null 值")]),t._v("的，因此 ECMA-262 规定对它们的相等性测试要返回 true。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("ul",[a("li",[t._v("要注意的是这个操作符出于比较的目的会转换其操作数（本章后面将详细介绍相关内容）。")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-4-boolean-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-4-boolean-类型"}},[t._v("#")]),t._v(" 3.4.4 Boolean 类型")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. Boolean 类型")])])]),t._v(" "),a("p",[t._v("Boolean 类型只有两个"),a("strong",[t._v("字面值")]),t._v("：true 和 false")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. Boolean()：")])])]),t._v(" "),a("p",[a("strong",[t._v("将值转换为其对应的 Boolean 值")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" messageAsBoolean "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("3. 等价值：")])])]),t._v(" "),a("p",[t._v("ECMAScript 所有类型的值都有与这两个 Boolean 值等价的值：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("转换为 true 的值")]),t._v(" "),a("th",[t._v("转换为 false 的值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("任何非空字符串")]),t._v(" "),a("td",[a("strong",[t._v('""')]),t._v("（"),a("strong",[t._v("空字符串")]),t._v("）")])]),t._v(" "),a("tr",[a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("任何非零数字值（包括无穷大）")]),t._v(" "),a("td",[a("strong",[t._v("0 和 NaN")]),t._v("（参见本章后面有关 NaN 的内容）")])]),t._v(" "),a("tr",[a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("任何对象")]),t._v(" "),a("td",[a("strong",[t._v("Null")])])]),t._v(" "),a("tr",[a("td",[t._v("Undefined")]),t._v(" "),a("td",[t._v("n/a 或 N/A（not applicable 不适用）")]),t._v(" "),a("td",[a("strong",[t._v("undefined")])])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对理解"),a("strong",[t._v("流控制语句自动执行")]),t._v("（如 if 语句）相应的 Boolean 转换非常重要")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value is true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-4-5-number-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-5-number-类型"}},[t._v("#")]),t._v(" 3.4.5 Number 类型")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. Number 类型")])])]),t._v(" "),a("p",[t._v("Number 类型使用"),a("strong",[t._v("IEEE754 格式")]),t._v("来表示整数和浮点数值（浮点数值在某些语言中也被称为双精度数值）")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 不同的数值字面量格式")])])]),t._v(" "),a("p",[t._v("数值字面量格式：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("格式")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("整数")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("浮点数值")]),t._v(" "),a("td",[t._v("是该数值中必须包含一个小数点且小数点后面必须至少有一位数字")])])])]),t._v(" "),a("p",[t._v("整数字面量：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("格式")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("十进制")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("八进制")]),t._v(" "),a("td",[t._v("首位必须是 0")])]),t._v(" "),a("tr",[a("td",[t._v("十六进制")]),t._v(" "),a("td",[t._v("前两位必须是 0x")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" intNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" octalNum1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("070")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 八进制的56")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" octalNum2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("079")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无效的八进制数值——解析为79")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" octalNum3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无效的八进制数值——解析为8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hexNum1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十六进制的10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hexNum2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十六进制的31")]),t._v("\n")])])]),a("p",[t._v("浮点数：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("是该数值中必须包含一个小数点且小数点后面必须至少有一位数字")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效，但不推荐")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("由于保存浮点数值需要的内存空间是保存整数值的两倍，因此 ECMAScript 会不失时机地将浮点数值转换为整数值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整数小数点后面没有数字，解析为1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整数，解析为10")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("浮点数值的最高精度是 17 位小数，精确度不如整数。永远不要测试某个特定的浮点数值。这是使用基于 IEEE754 数值的"),a("strong",[t._v("浮点计算的通病")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要做这样的测试！")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You got 0.3."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. e 表示法：")])])]),t._v(" "),a("p",[t._v("用 e 表示法（即科学计数法）极大或极小的数值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.125e7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于31250000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3e-17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于0.00000000000000003")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("4. 无穷值：")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("无穷值")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("Infinity")])]),t._v(" "),a("td",[t._v("Number.MIN_VALUE 和 Number.MAX_VALUE 可以得到负和正 Infinity 的值。"),a("br"),t._v("Number.NEGATIVE_INFINITY 和 Number.POSITIVE_INFINITY 也可以得到负和正 Infinity 的值（NEGATIVE 负面、POSITIVE 正面）。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("isFinite()")])]),t._v(" "),a("td",[t._v("确定一个数值是不是有穷的")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("大多数浏览器中")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MIN_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5e-324")]),t._v("；\nNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.7976931348623157e+308")]),t._v("；\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("5. 非数值：")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("非数值")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("NaN")])]),t._v(" "),a("td",[a("strong",[t._v("非数值")]),t._v("（Not a Number）是"),a("strong",[t._v("一个特殊的数值")]),t._v("，用于表示一个本来要返回数值的操作数未返回数值的情况（这样就不会抛出错误了）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("isNaN()")])]),t._v(" "),a("td",[t._v("确定这个参数是否“不是数值”")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("任何数值除以 0 都会导致错误，从而停止代码执行。但在 ECMAScript 中，任何数值"),a("strong",[t._v("除以 0 会返回 NaN")]),t._v("，因此"),a("strong",[t._v("不会影响其他代码的执行")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("只有 0/0=NaN")])]),t._v(" "),a("li",[a("p",[t._v("正数/0=Infinity")])]),t._v(" "),a("li",[a("p",[t._v("负数/0=-Infinity")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/nan.png",alt:"nan"}})])])])]),t._v(" "),a("li",[a("p",[t._v("特点：")]),t._v(" "),a("ul",[a("li",[t._v("任何涉及 NaN 的操作（例如 NaN/10）都会返回 NaN")]),t._v(" "),a("li",[t._v("NaN 与任何值都不相等，包括 NaN 本身")])])]),t._v(" "),a("li",[a("p",[t._v("isNaN()也适用于对象。对象调用 isNaN()函数时：")]),t._v(" "),a("ul",[a("li",[t._v("调用对象的 valueOf()方法（？valueOf()在哪？）")]),t._v(" "),a("li",[t._v("确定返回的值是否可以转换为数值（依照[Number()转换规则：](onenote:#3.4.5 Number 类型&section-id={192D2815-4116-4F8C-9D75-851A4B6268A1}&page-id={24AF7BDC-8E95-49F5-B157-512B4B4B9EAB}&object-id={E996B871-F05F-075E-36F8-828A6675F56C}&11&base-path=https://d.docs.live.net/da9037b3374f6c68/文档/笔记/Knowledge/javascript高级程序设计.one)）。")]),t._v(" "),a("li",[t._v("如果不能，则基于这个返回值再调用 toString()方法，再测试返回值。")])]),t._v(" "),a("p",[t._v("这个过程也是 ECMAScript 中内置函数和操作符的一般执行流程（详细的内容请参见 3.5 节。）")])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("6. 数值转换：")])])]),t._v(" "),a("p",[a("strong",[t._v("把非数值转换为数值的 3 个函数：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("Number()")])]),t._v(" "),a("td",[t._v("用于任何数据类型")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("parseInt()")])]),t._v(" "),a("td",[t._v("专门用于字符串")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("parseFloat()")])]),t._v(" "),a("td",[t._v("专门用于字符串")])])])]),t._v(" "),a("p",[a("strong",[t._v("Number()转换规则：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"000011"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//11")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("Boolean 值，true 和 false 将分别被转换为"),a("strong",[t._v("1")]),t._v(" 和"),a("strong",[t._v("0")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("数字值，只是简单的传入和返回。")])]),t._v(" "),a("li",[a("p",[t._v("null 值，返回"),a("strong",[t._v("0")]),t._v("（空对象）。")])]),t._v(" "),a("li",[a("p",[t._v("undefined，返回"),a("strong",[t._v("NaN")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("字符串")]),t._v(" "),a("ul",[a("li",[t._v('整数格式（包括前面带正号或负号的情况），将其转换为十进制数值，注意："011"会变成 11')]),t._v(" "),a("li",[t._v("浮点格式，将其转换为对应的浮点数值，注意：同上")]),t._v(" "),a("li",[t._v("十六进制格式，将其转换为十进制数值")]),t._v(" "),a("li",[t._v("空字符串，将其转换为 0")]),t._v(" "),a("li",[t._v("除上述格式之外，将其转换为 NaN。")])])]),t._v(" "),a("li",[a("p",[t._v("对象")]),t._v(" "),a("ul",[a("li",[t._v("调用对象的"),a("code",[t._v("valueOf()")]),t._v("方法(返回对象的字符串、数值或布尔值表示。)")]),t._v(" "),a("li",[t._v("然后确定该方法返回的值是否可以转换为数值。如果能，则返回数值。")]),t._v(" "),a("li",[t._v("如果不能，则基于这个返回值再调用 toString()方法，再测试返回值。")])])]),t._v(" "),a("li",[a("p",[t._v("一元加操作符（3.5.1 节将介绍）的操作与 Number()函数相同")])]),t._v(" "),a("li",[a("p",[t._v("Number()转换字符串时复杂而且不够合理，在处理整数的时候更常用的是 parseInt()")])])]),t._v(" "),a("p",[a("strong",[t._v("parseInt()转换规则：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("是看其是否符合数值模式，忽略空格直至非空格字符。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第一个字符：")])]),t._v(" "),a("ul",[a("li",[t._v("不是数字字符或者负号，返回"),a("strong",[t._v("NaN")]),t._v("；也就是说，空字符串会返回 NaN（"),a("strong",[t._v("Number()对空字符返回 0")]),t._v("）。")]),t._v(" "),a("li",[t._v("是数字字符，继续解析到解析完所有后续字符或者遇到了一个非数字字符。\n"),a("ul",[a("li",[t._v('以"0x"开头且后跟数字字符，将其当作一个十六进制整数，转换为十进制数值')]),t._v(" "),a("li",[t._v('以"0"开头且后跟数字字符，将其当作一个八进制整数，转换为十进制数值。')])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234blue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10（十六进制数）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 22")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"070"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 56（八进制数）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"70"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 70（十进制数）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15（十六进制数）")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[t._v("parseInt()第二个参数：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("解析像八进制字面量的字符串时，ECMAScript 3 和 5 存在分歧。")]),t._v(" "),a("ul",[a("li",[t._v("ECMAScript 5 JavaScript 引擎中，parseInt()已经不具有解析八进制值的能力，结果就得到十进制的 70。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ECMAScript 3 认为是56（八进制），ECMAScript 5 认为是70（十进制）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"070"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("消除上述困惑，"),a("strong",[t._v("提供第二个参数")]),t._v("：转换时使用的基数（即多少进制）。")]),t._v(" "),a("ul",[a("li",[t._v("不指定基数意味着让 parseInt()决定如何解析输入的字符串，建议无论在什么情况下都明确指定基数。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xAF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//175")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//175 //"0x"可不带')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[t._v("parseFloat()转化规则：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("同，")])]),t._v(" "),a("li",[a("p",[t._v("区别：")]),t._v(" "),a("ul",[a("li",[t._v("第一个小数点有效")]),t._v(" "),a("li",[t._v("始终都会忽略前导的零，只解析十进制值，因此它没有用第二个参数指定基数的用法")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234blue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1234 （整数）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"22.5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//22.5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"22.34.5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//22.34")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0908.5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//908.5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.125e7"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//31250000")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[t._v("parseFloat()转整数字符串：")])]),t._v(" "),a("p",[t._v("注意：字符串包含的是一个整数，会返回整数")]),t._v(" "),a("h3",{attrs:{id:"_3-4-6-string-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-6-string-类型"}},[t._v("#")]),t._v(" 3.4.6 String 类型")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. String 类型")])])]),t._v(" "),a("p",[t._v("表示由零或多个"),a("strong",[t._v("16 位 Unicode 字符")]),t._v("组成的字符序列，即字符串。")]),t._v(" "),a("p",[t._v("字符串：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("特殊的字符字面量——转义序列")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("String 数据类型包含一些特殊的字符字面量")])]),t._v(" "),a("li",[a("p",[t._v("用于表示非打印字符，或者具有其他用途的字符。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/non-printable.png",alt:"non-printable"}})])])])]),t._v(" "),a("li",[a("p",[t._v("字符字面量使用：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("可在任意位置，将被作为一个字符来解析")])]),t._v(" "),a("li",[a("p",[t._v("任何字符串的长度都可以通过访问其 length 属性取得")]),t._v(" "),a("ul",[a("li",[t._v("这个属性返回的字符数包括 16 位字符(单字节)的数目。如果字符串中包含双字节字符，那么 length 属性可能不会精确地返回字符串中的字符数目。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is the letter sigma: \\u03a3."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出28")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("字符串一旦创建，它们的值就"),a("strong",[t._v("不能改变")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("要改变某个变量保存的字符串，首先要销毁原来的字符串，然后再用另一个包含新值的字符串填充该变量")])]),t._v(" "),a("li",[a("p",[t._v('实现过程：创建一个能容纳 10 个字符的新字符串，在这个字符串中填充"Java"和"Script"，销毁原来的字符串"Java"和字符串"Script"。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lang "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlang "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lang "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 转换为字符串：")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("toString()")]),t._v("（第 5 章将讨论这个方法的特点）")]),t._v(" "),a("td",[a("strong",[t._v("数值")]),t._v("、"),a("strong",[t._v("布尔值")]),t._v("、"),a("strong",[t._v("对象")]),t._v("和字符串值都有 toString()方法。但 null 和 undefined 值没有这个方法。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("String()")])]),t._v(" "),a("td",[t._v("将"),a("strong",[t._v("任何类型的值")]),t._v("转换为字符串。")])]),t._v(" "),a("tr",[a("td",[t._v('" "+ " "')]),t._v(" "),a("td",[t._v('要把某个值转换为字符串，可以使用加号操作符（3.5 节讨论）把它与一个字符串（""）加在一起。')])])])]),t._v(" "),a("p",[t._v("数值的 toString()方法时，可以传递一个参数：输出数值的基数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "10"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1010"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "12"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "10"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "a"')]),t._v("\n")])])]),a("p",[t._v("在不知道要转换的值是不是 null 或 undefined 的情况下转换规则：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("值有 toString()方法，调用该方法（没有参数），返回相应的结果；")])]),t._v(" "),a("li",[a("p",[t._v('值是 null，返回**"null"**；')])]),t._v(" "),a("li",[a("p",[t._v('值是 undefined，返回**"undefined"**。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "10"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "true"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "null"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-4-7-object-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-7-object-类型"}},[t._v("#")]),t._v(" 3.4.7 Object 类型")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. Object 类型")])])]),t._v(" "),a("p",[t._v("ECMAScript 中的对象其实就"),a("strong",[t._v("是一组数据和功能的集合")]),t._v("。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 创建：")])])]),t._v(" "),a("p",[t._v("通过 new 操作符后跟要创建的对象类型的名称来创建。不给构造函数传递参数，可以省略后面的那一对圆括号，但不推荐。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效，但不推荐省略圆括号")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("3. 理解一个重要的思想：")])])]),t._v(" "),a("p",[t._v("在 ECMAScript 中，Object 类型是所有它的实例的基础，"),a("strong",[t._v("对象都具有 Object 对象的属性和方法")]),t._v("。（第 5 章和第 6 章将详细介绍 Object 与其他对象的关系。）（"),a("strong",[t._v("继承的思想")]),t._v("）。")]),t._v(" "),a("p",[a("strong",[t._v("4. Object 的每个实例都具有下列属性和方法：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性/方法")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("constructor")])]),t._v(" "),a("td",[t._v("保存着用于创建当前对象的函数。 对于前面的例子而言，**构造函数（constructor）**就是 Object()。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("hasOwnProperty(propertyName)")]),t._v("：（Property /ˈprɒpəti/ 特性，属性）")]),t._v(" "),a("td",[t._v("用于检查给定的属性在当前"),a("strong",[t._v("对象实例中（而不是在实例的原型中）是否存在")]),t._v("。 其中，作为参数的属性名（propertyName）"),a("strong",[t._v("必须以字符串形式指定")]),t._v('（例如：o.hasOwnProperty("name")）。')])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("isPrototypeOf(object)")]),t._v("：（Prototype /ˈprəʊtətaɪp/ 原型)")]),t._v(" "),a("td",[t._v("用于检查传入的对象"),a("strong",[t._v("是否是传入对象的原型")]),t._v("（第 5 章将讨论原型）。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("propertyIsEnumerable(propertyName)")]),t._v("：(enumerable/ɪ'nju:mərəbəl/ 可列举的)")]),t._v(" "),a("td",[t._v("用于检查给定的属性"),a("strong",[t._v("是否能够使用 for-in 语句")]),t._v("（本章后面将会讨论）来枚举。 与 hasOwnProperty()方法一样，作为参数的属性名"),a("strong",[t._v("必须以字符串形式指定")]),t._v("。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("toLocaleString()")])]),t._v(" "),a("td",[a("strong",[t._v("返回对象的字符串表示")]),t._v("，该字符串与执行环境的地区对应。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("toString()")])]),t._v(" "),a("td",[a("strong",[t._v("返回对象的字符串表示")]),t._v("。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("valueOf()")])]),t._v(" "),a("td",[a("strong",[t._v("返回对象的字符串、数值或布尔值表示")]),t._v("。 "),a("strong",[t._v("通常与 toString()方法的返回值相同")]),t._v("。")])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4. 不是 ECMA-262 中对象")])])]),t._v(" "),a("p",[t._v("ECMA-262 中对象的行为不一定适用于 JavaScript 中的其他对象。比如 BOM 和 DOM 中的对象，都属于"),a("strong",[t._v("宿主对象，可能会也可能不会继承 Object")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_3-5-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-操作符"}},[t._v("#")]),t._v(" 3.5 操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 操作符")])])]),t._v(" "),a("p",[t._v("用于操作数据值，")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 包括：")])])]),t._v(" "),a("ul",[a("li",[t._v("算术操作符（如加号和减号）")]),t._v(" "),a("li",[t._v("位操作符")]),t._v(" "),a("li",[t._v("关系操作符")]),t._v(" "),a("li",[t._v("相等操作符")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 与众不同：")])])]),t._v(" "),a("p",[t._v("适用于很多值：字符串、数字值、布尔值，甚至对象。 "),a("strong",[t._v("在应用于对象时：相应的操作符通常都会调用对象的 valueOf() 和/或 toString()方法，以便取得可以操作的值。（会在后台转换不同的数据类型）")])]),t._v(" "),a("h3",{attrs:{id:"_3-5-1-一元操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-一元操作符"}},[t._v("#")]),t._v(" 3.5.1 一元操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 一元操作符")])])]),t._v(" "),a("p",[t._v("只能操作一个值的操作符，是 ECMAScript 中最简单的操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 递增和递减操作符")])])]),t._v(" "),a("p",[t._v("各有两个版本：前置型、后置型。")]),t._v(" "),a("p",[t._v("前置型特点：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("前置递增和递减，"),a("strong",[t._v("变量值在语句被求值以前改变")]),t._v("。（在计算机科学领域，这种情况通常被称作"),a("strong",[t._v("副效应")]),t._v("。）")])]),t._v(" "),a("li",[a("p",[t._v("前置递增和递减操作与执行语句的优先级相等，"),a("strong",[t._v("整个语句会从左至右被求值")]),t._v("。")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" anotherAge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出28")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anotherAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出30")]),t._v("\n")])])]),a("p",[t._v("规则：")]),t._v(" "),a("p",[t._v("对任何值都适用，不仅适用于整数，也用于字符串、布尔值、浮点数值和对象。")]),t._v(" "),a("ul",[a("li",[t._v("数字字符串，先将其转换为数字值，再执行加减 1 的操作。字符串变量变成数值变量。")]),t._v(" "),a("li",[t._v("非数字字符串，将变量的值设置为 NaN（第 4 章将详细讨论）。字符串变量变成数值变量。")]),t._v(" "),a("li",[t._v("布尔值 false，先将其转换为 0 再执行加减 1 的操作。布尔值变量变成数值变量。")]),t._v(" "),a("li",[t._v("布尔值 true，先将其转换为 1 再执行加减 1 的操作。布尔值变量变成数值变量。")]),t._v(" "),a("li",[t._v("浮点数值，执行加减 1 的操作。")]),t._v(" "),a("li",[t._v("对象，先调用对象的 valueOf()方法（第 5 章将详细讨论）以取得一个可供操作的值。然后对该值应用前述规则。如果结果是 NaN，则在调用 toString()方法后再应用前述规则。对象变量变成数值变量。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成数值3")]),t._v("\ns2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成NaN")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成数值1")]),t._v("\nf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成0.10000000000000009（由于浮点舍入错误所致）")]),t._v("\no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成数值-2")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("3. 一元加和减操作符")])])]),t._v(" "),a("p",[t._v("数值前：")]),t._v(" "),a("p",[t._v("一元加在数值前面，对数值不会产生任何影响；一元减在数值前面，主要用于表示负数")]),t._v(" "),a("p",[t._v("非数值前：")]),t._v(" "),a("p",[t._v("一元加在非数值前面，会像 Number()转型函数一样对这个值执行转换。（"),a("strong",[t._v("这段总结精辟")]),t._v("）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("布尔值 false 和 true 将被转换为 0 和 1，")])]),t._v(" "),a("li",[a("p",[t._v("字符串值会被按照一组特殊的规则进行解析，")])]),t._v(" "),a("li",[a("p",[t._v("对象是"),a("strong",[t._v("先调用它们的 valueOf()和（或）toString()方法")]),t._v("，再转换得到的值。")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成数值1")]),t._v("\ns2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成数值1.1")]),t._v("\ns3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成NaN")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成数值0")]),t._v("\nf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值未变，仍然是1.1")]),t._v("\no "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成数值-1")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成了数值-1")]),t._v("\ns2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成了数值-1.1")]),t._v("\ns3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成了NaN")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成了数值0")]),t._v("\nf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变成了-1.1")]),t._v("\no "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值变成了数值1")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-5-2-位操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-位操作符"}},[t._v("#")]),t._v(" 3.5.2 位操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 位操作符")])])]),t._v(" "),a("p",[t._v("用于在最基本的层次上，即"),a("strong",[t._v("按内存中表示数值的位来操作数值")]),t._v("。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 对数值应用位操作符过程：")])])]),t._v(" "),a("p",[t._v("过程：")]),t._v(" "),a("ul",[a("li",[t._v("64 位的数值被转换成"),a("strong",[t._v("32 位")]),t._v("数值")]),t._v(" "),a("li",[t._v("然后执行位操作")]),t._v(" "),a("li",[t._v("最后再将 32 位的结果转换回 64 位数值")])]),t._v(" "),a("p",[t._v("数转二进制数过程：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("二进制")]),t._v(" "),a("th",[t._v("计算步骤")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("正数")]),t._v(" "),a("td",[t._v("以"),a("strong",[t._v("纯二进制格式")]),t._v("存储。")]),t._v(" "),a("td",[t._v("第一位（叫做位 0）表示 20，第二位表示 21，…，第 32 位表示数值的符号。")])]),t._v(" "),a("tr",[a("td",[t._v("负数")]),t._v(" "),a("td",[t._v("以"),a("strong",[t._v("二进制补码")]),t._v("存储（"),a("strong",[t._v("反码")]),t._v("加一叫补码）")]),t._v(" "),a("td",[t._v("1. 求这个数值绝对值的二进制码；"),a("br"),t._v("2.求二进制反码，即将 0 替换为 1，将 1 替换为 0；"),a("br"),t._v("3. 得到的二进制反码加 1。")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("p",[t._v("计算 18 的二进制码：")]),t._v(" "),a("img",{staticStyle:{zoom:"75%"},attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-positive.png",alt:"bitwise-positive"}}),t._v(" "),a("p",[t._v("计算-18 的二进制补码：\n"),a("img",{staticStyle:{zoom:"75%"},attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-negative.png",alt:"bitwise-negative"}})]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "-10010"')]),t._v("\n")])])]),a("p",[t._v("ECMAScript 会尽力向我们隐藏所有这些信息。即以二进制字符串形式输出一个负数时，我们看到的只是"),a("strong",[t._v("这个负数绝对值的二进制码前面加上了一个负号（区真正意义上的补码）")])]),t._v(" "),a("p",[t._v("严重的副效应：即在"),a("strong",[t._v("对特殊的 NaN 和 Infinity 值应用位操作时，这两个值都会被当成 0 来处理")]),t._v("。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 对非数值应用操作符过程：")])])]),t._v(" "),a("p",[t._v("过程：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("会先使用 Number()函数将该值转换为一个数值（自动完成）")])]),t._v(" "),a("li",[t._v("然后再应用位操作，得到的结果将是一个数值。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4. 位操作符")])])]),t._v(" "),a("p",[t._v("是将两个数值的每一位对齐，然后根据下表中的规则，对相同位置上的两个数执行相应操作：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("位运算符")]),t._v(" "),a("th",[t._v("符号")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("按位非（NOT）")]),t._v(" "),a("td",[t._v("~")]),t._v(" "),a("td",[t._v("返回"),a("strong",[t._v("数值的反码")])])]),t._v(" "),a("tr",[a("td",[t._v("按位与（AND）")]),t._v(" "),a("td",[t._v("&")]),t._v(" "),a("td",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-and.png",alt:"bitwise-and"}})])]),t._v(" "),a("tr",[a("td",[t._v("按位或（OR）")]),t._v(" "),a("td",[t._v("|")]),t._v(" "),a("td",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-or.png",alt:"bitwise-or"}})])]),t._v(" "),a("tr",[a("td",[t._v("按位异或（XOR）")]),t._v(" "),a("td",[t._v("^")]),t._v(" "),a("td",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-xor.png",alt:"bitwise-xor"}})])]),t._v(" "),a("tr",[a("td",[t._v("左移")]),t._v(" "),a("td",[t._v("<<")]),t._v(" "),a("td",[t._v("将数值的所有位向左移动指定的位数")])]),t._v(" "),a("tr",[a("td",[t._v("右移——有符号")]),t._v(" "),a("td",[t._v(">>")]),t._v(" "),a("td",[t._v("将数值向右移动，但保留符号位（即正负号标记）")])]),t._v(" "),a("tr",[a("td",[t._v("右移——无符号")]),t._v(" "),a("td",[t._v(">>>")]),t._v(" "),a("td",[t._v("对正数来说，无符号右移的结果与有符号右移相同"),a("br"),t._v("对负数来说，把负数的二进制码当成正数的二进制码")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//27")]),t._v("\n")])])]),a("p",[t._v("25 与 3 按位或的结果是 27：")]),t._v(" "),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-or-demo.png",alt:"bitwise-or-demo"}}),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//26")]),t._v("\n")])])]),a("p",[t._v("25 与 3 按位异或的结果是 26：\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-xor-demo.png",alt:"bitwise-xor-demo"}})]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的1000000，十进制的64")]),t._v("\n")])])]),a("p",[t._v("将数值 2 向左移动 5 位（得到 64）：\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-left.png",alt:"bitwise-left"}})]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的1000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的10 ，即十进制的2")]),t._v("\n")])])]),a("p",[t._v("将数值 64 向右移动 5 位（得到 2）：\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-right.png",alt:"bitwise-right"}})]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的1000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的10 ，即十进制的2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的11111111111111111111111111000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于十进制的134217726")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-5-3-布尔操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-3-布尔操作符"}},[t._v("#")]),t._v(" 3.5.3 布尔操作符")]),t._v(" "),a("p",[t._v("在一门编程语言中，布尔操作符的重要性堪比相等操作符。如果没有"),a("strong",[t._v("测试两个值关系的能力")]),t._v("，那么诸如 if...else 和循环之类的语句就不会有用武之地了。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 布尔操作符")])])]),t._v(" "),a("p",[t._v("一共有 3 个：非（NOT）、与（AND）和或（OR）。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("符号")]),t._v(" "),a("th",[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("逻辑非")]),t._v(" "),a("td",[t._v("！")]),t._v(" "),a("td",[t._v("转换为一个布尔值，再求反")])]),t._v(" "),a("tr",[a("td",[t._v("逻辑与")]),t._v(" "),a("td",[t._v("&&")]),t._v(" "),a("td",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/boolean-and.png",alt:"boolean-and"}})])]),t._v(" "),a("tr",[a("td",[t._v("逻辑或")]),t._v(" "),a("td",[t._v("||")]),t._v(" "),a("td",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/bitwise-or.png",alt:"bitwise-or"}})])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 逻辑非")])])]),t._v(" "),a("p",[t._v("用于任何类型的操作数，遵循下列规则：")]),t._v(" "),a("ul",[a("li",[t._v("是一个对象，返回 false；")]),t._v(" "),a("li",[t._v("是一个空字符串，返回 true；")]),t._v(" "),a("li",[t._v("是一个非空字符串，返回 false；")]),t._v(" "),a("li",[t._v("是数值 0，返回 true；")]),t._v(" "),a("li",[t._v("是任意非 0 数值（包括 Infinity），返回 false；")]),t._v(" "),a("li",[t._v("是 null，返回 true；")]),t._v(" "),a("li",[t._v("是 NaN，返回 true；")]),t._v(" "),a("li",[t._v("是 undefined，返回 true")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("p",[t._v("同时使用两个逻辑非操作符，会模拟 Boolean()转型函数的行为")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("3. 逻辑与")])])]),t._v(" "),a("p",[t._v("用于任何类型的操作数，遵循下列规则：")]),t._v(" "),a("ul",[a("li",[t._v("第个操作数是对象，返回第二个操作数；")]),t._v(" "),a("li",[t._v("第二个操作数是对象，只有在第一个操作数的求值结果为 true 的情况下才会返回该对象；")]),t._v(" "),a("li",[t._v("两个操作数都是对象，返回第二个操作数；")]),t._v(" "),a("li",[t._v("有一个操作数是 null，返回 null；")]),t._v(" "),a("li",[t._v("有一个操作数是 NaN，返回 NaN；")]),t._v(" "),a("li",[t._v("有一个操作数是 undefined，返回 undefined。")])]),t._v(" "),a("p",[t._v("逻辑与操作属于"),a("strong",[t._v("短路操作")]),t._v("：第一个操作数能够决定结果，那么就不会再对第二个操作数求值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" someUndefinedVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里会发生错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这一行不会执行")]),t._v("\n")])])]),a("p",[t._v("不能在逻辑与操作中使用未定义的值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" someUndefinedVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会发生错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 会执行（"false"）')]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("4. 逻辑或")])])]),t._v(" "),a("p",[t._v("用于任何类型的操作数，遵循下列规则：")]),t._v(" "),a("ul",[a("li",[t._v("第一个操作数是对象，则返回第一个操作数；")]),t._v(" "),a("li",[t._v("第一个操作数的求值结果为 false，则返回第二个操作数；")]),t._v(" "),a("li",[t._v("两个操作数都是对象，则返回第一个操作数；")]),t._v(" "),a("li",[t._v("两个操作数都是 null，则返回 null；")]),t._v(" "),a("li",[t._v("两个操作数都是 NaN，则返回 NaN；")]),t._v(" "),a("li",[t._v("两个操作数都是 undefined，则返回 undefined。")])]),t._v(" "),a("p",[t._v("逻辑或操作符也属于"),a("strong",[t._v("短路操作")]),t._v("：第一个操作数的求值结果为 true，就不会对第二个操作数求值了。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" someUndefinedVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会发生错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 会执行（"true"）')]),t._v("\n")])])]),a("p",[t._v("不能在逻辑或操作中使用未定义的值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" someUndefinedVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里会发生错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这一行不会执行")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("可以利用逻辑或的这一行为来避免为变量赋 null 或 undefined 值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" preferredObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" backupObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("preferredObject 中包含优先赋给变量 myObject 的值，backupObject 负责在 preferredObject 中不包含有效值时提供后备值。如果是 null，则将 backupObject 的值赋给 myObject")])])]),t._v(" "),a("h3",{attrs:{id:"_3-5-4-乘性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-4-乘性操作符"}},[t._v("#")]),t._v(" 3.5.4 乘性操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 乘法操作符")])]),t._v("\n3 个：乘法、除法和求模。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("乘性操作符")]),t._v(" "),a("th",[t._v("乘法")]),t._v(" "),a("th",[t._v("除法")]),t._v(" "),a("th",[t._v("求模(即取余)")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("符号")]),t._v(" "),a("td",[t._v("*")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("%")])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 乘法")])])]),t._v(" "),a("p",[t._v("在处理特殊值的情况下，乘法操作符遵循下列特殊的规则：")]),t._v(" "),a("ul",[a("li",[t._v("都是数值，执行常规的乘法计算，即两个正数或两个负数相乘的结果还是正数，而如果只有一个操作数有符号，那么结果就是负数。如果乘积超过了 ECMAScript 数值的表示范围，则返回 Infinity 或-Infinity；")]),t._v(" "),a("li",[t._v("有一个操作数是 NaN，则结果是 NaN； 是 Infinity 与 0 相乘，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是 Infinity 与非 0 数值相乘，则结果是 Infinity 或-Infinity，取决于有符号操作数的符号；")]),t._v(" "),a("li",[t._v("是 Infinity 与 Infinity 相乘，则结果是 Infinity；")]),t._v(" "),a("li",[t._v("有一个操作数不是数值，则在后台调用 Number()将其转换为数值，然后再应用上面的规则。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 除法")])])]),t._v(" "),a("p",[t._v("对特殊的值也有特殊的处理规则。这些规则如下：")]),t._v(" "),a("ul",[a("li",[t._v("都是数值，执行常规的除法计算，即两个正数或两个负数相除的结果还是正数，而如果只有一个操作数有符号，那么结果就是负数。如果商超过了 ECMAScript 数值的表示范围，则返回 Infinity 或-Infinity；")]),t._v(" "),a("li",[t._v("有一个操作数是 NaN，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是 Infinity 被 Infinity 除，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是零被零除，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是非零的有限数被零除，则结果是 Infinity 或-Infinity，取决于有符号操作数的符号；")]),t._v(" "),a("li",[t._v("是 Infinity 被任何非零数值除，则结果是 Infinity 或-Infinity，取决于有符号操作数的符号；")]),t._v(" "),a("li",[t._v("有一个操作数不是数值，则在后台调用 Number()将其转换为数值，然后再应用上面的规则。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4. 求模(即取余)")])])]),t._v(" "),a("p",[t._v("与另外两个乘性操作符类似，求模操作符会遵循下列特殊规则来处理特殊的值：")]),t._v(" "),a("ul",[a("li",[t._v("都是数值，执行常规的除法计算，返回除得的余数；")]),t._v(" "),a("li",[t._v("被除数是无穷大值而除数是有限大的数值，则结果是 NaN；")]),t._v(" "),a("li",[t._v("被除数是有限大的数值而除数是零，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是 Infinity 被 Infinity 除，则结果是 NaN；")]),t._v(" "),a("li",[t._v("被除数是有限大的数值而除数是无穷大的数值，则结果是被除数；")]),t._v(" "),a("li",[t._v("被除数是零，则结果是零；")]),t._v(" "),a("li",[t._v("有一个操作数不是数值，则在后台调用 Number()将其转换为数值，然后再应用上面的规则。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于1")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-5-5-加性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-5-加性操作符"}},[t._v("#")]),t._v(" 3.5.5 加性操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 加性操作符")])])]),t._v(" "),a("p",[t._v("2 个：加法、减法。在 ECMAScript 中，这两个操作符却都有一系列的特殊行为。与乘性操作符类似，加性操作符也会在后台转换不同的数据类型。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("加性操作符")]),t._v(" "),a("th",[t._v("加法")]),t._v(" "),a("th",[t._v("减法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("符号")]),t._v(" "),a("td",[t._v("+")]),t._v(" "),a("td",[t._v("-")])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 加法")])])]),t._v(" "),a("p",[t._v("规则：")]),t._v(" "),a("ul",[a("li",[t._v("如果两个操作符都是数值，执行常规的加法计算，然后根据下列规则返回结果：\n"),a("ul",[a("li",[t._v("有一个操作数是 NaN，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是 Infinity 加 Infinity，则结果是 Infinity；")]),t._v(" "),a("li",[t._v("是-Infinity 加-Infinity，则结果是-Infinity；")]),t._v(" "),a("li",[t._v("是 Infinity 加-Infinity，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是+0 加+0，则结果是+0；")]),t._v(" "),a("li",[t._v("是-0 加-0，则结果是-0；")]),t._v(" "),a("li",[t._v("是+0 加-0，则结果是+0。")])])]),t._v(" "),a("li",[t._v("如果有一个操作数是字符串，那么就要应用如下规则：\n"),a("ul",[a("li",[t._v("两个操作数都是字符串，则将第二个操作数与第一个操作数拼接起来；")]),t._v(" "),a("li",[t._v("只有一个操作数是字符串，则将另一个操作数转换为字符串，然后再将两个字符串拼接起来。")])])]),t._v(" "),a("li",[t._v("其他情况，先转化成字符串，再走字符串的规则，转换规则：\n"),a("ul",[a("li",[t._v("如果有一个操作数是对象、数值或布尔值，则调用它们的 toString()方法取得相应的字符串值，然后再应用前面关于字符串的规则。")]),t._v(" "),a("li",[t._v('对于 undefined 和 null，则分别调用 String()函数并取得字符串"undefined"和"null"。')])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个数值相加")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个数值和一个字符串相加")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "55"')]),t._v("\n")])])]),a("p",[t._v("忽视加法操作中的数据类型是 ECMAScript 编程中最常见的一个错误。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The sum of 5 and 10 is "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "The sum of 5 and 10 is 15')]),t._v("\n")])])]),a("p",[t._v("因为每个加法操作是独立执行的")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The sum of 5 and 10 is "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "The sum of 5 and 10 is 510"')]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("3. 减法")])])]),t._v(" "),a("p",[t._v("规则：")]),t._v(" "),a("ul",[a("li",[t._v("如果两个操作符都是数值：\n"),a("ul",[a("li",[t._v("有一个操作数是 NaN，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是 Infinity 减 Infinity，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是-Infinity 减-Infinity，则结果是 NaN；")]),t._v(" "),a("li",[t._v("是 Infinity 减-Infinity，则结果是 Infinity；")]),t._v(" "),a("li",[t._v("是-Infinity 减 Infinity，则结果是-Infinity；")]),t._v(" "),a("li",[t._v("是+0 减+0，则结果是+0；")]),t._v(" "),a("li",[t._v("是+0 减-0，则结果是-0；")]),t._v(" "),a("li",[t._v("是-0 减-0，则结果是+0；")])])]),t._v(" "),a("li",[t._v("如果有一个操作数是字符串、布尔值、null 或 undefined：\n"),a("ul",[a("li",[t._v("则先在后台调用 Number()函数将其转换为数值，然后再根据前面的规则执行减法计算。如果转换的结果是 NaN，则减法的结果就是 NaN；")])])]),t._v(" "),a("li",[t._v("如果有一个操作数是对象：\n"),a("ul",[a("li",[t._v("则调用对象的 valueOf()方法以取得表示该对象的数值。如果得到的值是 NaN，则减法的结果就是 NaN。如果对象没有 valueOf()方法，则调用其 toString()方法并将得到的字符串转换为数值。")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4，因为true 被转换成了1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 5，因为"" 被转换成了0')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 3，因为"2"被转换成了2')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5，因为null 被转换成了0")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-5-6-关系操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-6-关系操作符"}},[t._v("#")]),t._v(" 3.5.6 关系操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 关系操作符")])])]),t._v(" "),a("p",[t._v("4 个：小于、大于、小于等于和大于等于，与 ECMAScript 中的其他操作符一样，当关系操作符的操作数使用了非数值时，也要进行数据转换或完成某些奇怪的操作。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("关系操作符")]),t._v(" "),a("th",[t._v("小于")]),t._v(" "),a("th",[t._v("小于等于")]),t._v(" "),a("th",[t._v("大于")]),t._v(" "),a("th",[t._v("大于等于")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("符号")]),t._v(" "),a("td",[t._v("<")]),t._v(" "),a("td",[t._v("<=")]),t._v(" "),a("td",[t._v(">")]),t._v(" "),a("td",[t._v(">=")])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 数据转化")])])]),t._v(" "),a("p",[t._v("遵循以下就是相应的规则：")]),t._v(" "),a("ul",[a("li",[t._v("都是数值，则执行数值比较。")]),t._v(" "),a("li",[t._v("都是字符串，则比较两个字符串对应的字符编码值。")]),t._v(" "),a("li",[t._v("一个操作数是数值，则将另一个操作数转换为一个数值，然后执行数值比较。")]),t._v(" "),a("li",[t._v("一个操作数是对象，则**调用这个对象的 valueOf()方法，用得到的结果按照前面的规则执行比较。如果对象没有 valueOf()方法，则调用 toString()方法，**并用得到的结果根据前面的规则执行比较。")]),t._v(" "),a("li",[t._v("一个操作数是布尔值，则先将其转换为数值，然后再执行比较。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 奇怪现象")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由于大写字母的字符编码全部小于小写字母的字符编码，因此我们就会看到如下所示的奇怪现象：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Brick"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alphabet"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("字母 B 的字符编码为 66，而字母 a 的字符编码是 97。")])]),t._v(" "),a("li",[a("p",[t._v("如果要真正比较，真正按字母表顺序比较字符串，就必须把两个操作数转换为相同的大小写形式（全部大写或全部小写），然后再执行比较。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Brick"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alphabet"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("另一种奇怪的现象发生在比较两个数字字符串的情况下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v('"2"的字符编码是 50，而"3"的字符编码是 51')])]),t._v(" "),a("li",[a("p",[t._v("如果要真正比较，将一个操作数改为数值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("任何操作数与 NaN 进行关系比较，结果都是 false")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// false，因为"a"被转换成了NaN')]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("按照常理，如果一个值不小于另一个值，则一定是大于或等于那个值。然而，在与 NaN 进行比较时，这两个比较操作的结果都返回了 false。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-5-7-相等操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-7-相等操作符"}},[t._v("#")]),t._v(" 3.5.7 相等操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 相等操作符")])])]),t._v(" "),a("p",[t._v("有相等操作符和"),a("strong",[t._v("全等操作符")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("2 个：相等（==）、不相等（!=）")]),t._v(" "),a("li",[t._v("2 个：全等（===）、不全等（!==）")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 进行比较——相等操作符")])])]),t._v(" "),a("p",[t._v("在转换不同的数据类型时，"),a("strong",[t._v("数据转换")]),t._v("，遵循下列基本规则：")]),t._v(" "),a("ul",[a("li",[t._v("有一个操作数是布尔值，则在比较相等性之前先将其转换为数值——false 转换为 0，而 true 转换为 1；")]),t._v(" "),a("li",[t._v("一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值；")]),t._v(" "),a("li",[t._v("一个操作数是对象，另一个操作数不是，则调用对象的 valueOf()方法，用得到的基本类型值按照前面的规则进行比较；")])]),t._v(" "),a("p",[t._v("特殊情况，进行比较时则要遵循下列规则：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("null 和 undefined 是相等的。要比较相等性之前，不能将 null 和 undefined 转换成其他任何值。")])]),t._v(" "),a("li",[a("p",[t._v("如果有一个操作数是 NaN，则相等操作符返回 false，而不相等操作符返回 true。重要提示：即使两个操作数都是 NaN，相等操作符也返回 false；因为按照规则，NaN 不等于 NaN。")])]),t._v(" "),a("li",[a("p",[t._v("如果两个操作数都是对象，则比较它们是不是同一个对象。如果两个操作数都指向同一个对象，则相等操作符返回 true；否则，返回 false。")])]),t._v(" "),a("li",[a("p",[t._v("下表列出了一些特殊情况及比较结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/coalyer/image-store@master/blog/professionalJs/equality_operator.png",alt:"equality_operator"}})])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 进行比较——全等操作符")])])]),t._v(" "),a("ul",[a("li",[t._v("除了在比较之前"),a("strong",[t._v("不转换操作数")]),t._v("之外，全等和不全等操作符与相等和不相等操作符没有什么区别。")]),t._v(" "),a("li",[t._v("null == undefined 会返回 true，因为它们是类似的值；但 null === undefined 会返回 false，因为它们是不同类型的值。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"55"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true，因为转换后相等")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"55"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false，因为不同的数据类型不相等")]),t._v("\n")])])]),a("p",[t._v("由于相等和不相等操作符存在类型转换问题，而为了保持代码中数据类型的完整性，我们推荐使用全等和不全等操作符。")]),t._v(" "),a("h3",{attrs:{id:"_3-5-8-条件操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-8-条件操作符"}},[t._v("#")]),t._v(" 3.5.8 条件操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" boolean_expression "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" true_value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" false_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-5-9-赋值操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-9-赋值操作符"}},[t._v("#")]),t._v(" 3.5.9 赋值操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 赋值操作符")])])]),t._v(" "),a("p",[t._v("由等于号（=）表示 其作用就是把右侧的值赋给左侧的变量")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 复合赋值操作符")])])]),t._v(" "),a("p",[t._v("每个主要算术操作符（以及个别的其他操作符）都有对应的复合赋值操作符。")]),t._v(" "),a("ul",[a("li",[t._v("乘/赋值（*=）；")]),t._v(" "),a("li",[t._v("除/赋值（/=）；")]),t._v(" "),a("li",[t._v("模/赋值（%=）；")]),t._v(" "),a("li",[t._v("加/赋值（+=）；")]),t._v(" "),a("li",[t._v("减/赋值（-=）；")]),t._v(" "),a("li",[t._v("左移/赋值（<<=）；")]),t._v(" "),a("li",[t._v("有符号右移/赋值（>>=）；")]),t._v(" "),a("li",[t._v("无符号右移/赋值（>>>=）。")])]),t._v(" "),a("h3",{attrs:{id:"_3-5-10-逗号操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-10-逗号操作符"}},[t._v("#")]),t._v(" 3.5.10 逗号操作符")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 逗号操作符的使用")])])]),t._v(" "),a("p",[t._v("使用逗号操作符可以在一条语句中执行多个操作：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("多用于声明多个变量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("除此之外，逗号操作符还可以用于赋值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// num 的值为0")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("在用于赋值时，逗号操作符总会返回表达式中的最后一项")])]),t._v(" "),a("li",[a("p",[t._v("这个例子可以帮我们理解逗号的这种行为。")])])])])]),t._v(" "),a("h2",{attrs:{id:"_3-6-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-语句"}},[t._v("#")]),t._v(" 3.6 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 流控制语句")])])]),t._v(" "),a("p",[t._v("ECMA-262 规定了一组语句（也称为"),a("strong",[t._v("流控制语句")]),t._v("）。语句可以很简单，例如通知函数退出；也可以比较复杂，例如指定重复执行某个命令的次数。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 语句为主要语法")])])]),t._v(" "),a("p",[t._v("从本质上看，"),a("strong",[t._v("语句定义了 ECMAScript 中的主要语法")]),t._v("，语句通常使用一或多个关键字来完成给定任务。")]),t._v(" "),a("h3",{attrs:{id:"_3-6-1-if-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-if-语句"}},[t._v("#")]),t._v(" 3.6.1 if 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" statement2\n")])])]),a("ul",[a("li",[t._v("condition（条件）可以是任意表达式")]),t._v(" "),a("li",[t._v("ECMAScript 会自动调用 Boolean()转换函数将这个表达式的结果转换为一个布尔值。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Greater than 25."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Less than or equal to 25."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-6-2-do-while-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-do-while-语句"}},[t._v("#")]),t._v(" 3.6.2 do-while 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2. 前测试循环语句")])])]),t._v(" "),a("p",[t._v("do-while 语句为前测试**循环语句 ，代码至少要被执行一次")]),t._v(" "),a("h3",{attrs:{id:"_3-6-3-while-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-3-while-语句"}},[t._v("#")]),t._v(" 3.6.3 while 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2. 后测试循环语句")])])]),t._v(" "),a("p",[t._v("while 语句为"),a("strong",[t._v("前测试")]),t._v("循环语句 ，有可能永远不会被执行")]),t._v(" "),a("h3",{attrs:{id:"_3-6-4-for-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-4-for-语句"}},[t._v("#")]),t._v(" 3.6.4 for 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialization"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" post "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" loop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2. 前测试循环语句")])])]),t._v(" "),a("p",[t._v("for 语句为"),a("strong",[t._v("前测试")]),t._v("循环语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. 使用")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一般用法：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("循环变量初始化表达式可以不使用 var 关键字，而在外部执行：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("for 语句中的初始化表达式、控制表达式和循环后表达式都是可选的。将这三个表达式全部省略，就会创建一个无限循环：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无限循环")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("只给出控制表达式实际上就把 for 循环转换成了 while 循环：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("由于 for 语句存在极大的灵活性，因此它也是 ECMAScript 中最常用的一个语句。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4. 不存在块级作用域")])])]),t._v(" "),a("p",[t._v("由于 ECMAScript 中不存在块级作用域（第 4 章将进一步讨论这一点），因此在循环内部定义的变量也可以在外部访问到")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("5. for 与 while 相同")])])]),t._v(" "),a("ul",[a("li",[t._v("只有当条件表达式（i<count）返回 true 的情况下才会进入 for 循环，因此也有可能不会执行循环体中的代码。")]),t._v(" "),a("li",[t._v("使用 while 循环做不到的，使用 for 循环同样也做不到。也就是说，for 循环只是把与循环有关的代码集中在了一个位置。")])]),t._v(" "),a("h3",{attrs:{id:"_3-6-5-for-in-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-5-for-in-语句"}},[t._v("#")]),t._v(" 3.6.5 for-in 语句")]),t._v(" "),a("p",[a("strong",[t._v("是一种精准的迭代语句，可以用来枚举对象的属性。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2.循环过程")])])]),t._v(" "),a("p",[t._v("举例：使用 for-in 循环来显示了 BOM 中 window 对象的所有属性。")]),t._v(" "),a("ul",[a("li",[t._v("每次执行循环时，都会将 window 对象中存在的一个属性名赋值给变量 propName。")]),t._v(" "),a("li",[t._v("这个过程会一直持续到对象中的所有属性都被枚举一遍为止。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" propName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("3. 循环特点：")])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("顺序不可预测")]),t._v("，ECMAScript 对象的属性没有顺序。因此，通过 for-in 循环输出的属性名的顺序是不可预测的。")]),t._v(" "),a("li",[a("strong",[t._v("如果表示要迭代的对象的变量值为 null 或 undefined，for-in 语句会抛出错误。")]),t._v(" "),a("ul",[a("li",[t._v("ECMAScript 5 更正了这一行为；对这种情况不再抛出错误，而只是不执行循环体。")]),t._v(" "),a("li",[t._v("为了保证最大限度的兼容性，建议在使用 for-in 循环之前，先检测确认该对象的值不是 null 或 undefined。")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-6-6-label-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-6-label-语句"}},[t._v("#")]),t._v(" 3.6.6 label 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("label"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2.使用")])])]),t._v(" "),a("ul",[a("li",[t._v("定义的 start 标签可以在将来由 break 或 continue 语句引用。")]),t._v(" "),a("li",[t._v("加标签的语句一般都要与 for 语句等循环语句配合使用。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("start"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-6-7-break-和-continue-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-7-break-和-continue-语句"}},[t._v("#")]),t._v(" 3.6.7 break 和 continue 语句")]),t._v(" "),a("p",[a("strong",[t._v("用于在循环中精确地控制代码的执行。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.作用")])])]),t._v(" "),a("ul",[a("li",[t._v("break 语句，会"),a("strong",[t._v("立即退出循环")]),t._v("，强制继续执行循环后面的语句")]),t._v(" "),a("li",[t._v("continue 语句，虽然也是"),a("strong",[t._v("立即退出循环")]),t._v("，但退出循环后"),a("strong",[t._v("会从循环的顶部")]),t._v("继续执行。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4，循环总共执行了4 次")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8，循环总共执行了8 次")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2.与 label 语句联合使用")])])]),t._v(" "),a("p",[t._v("break 和 continue 语句都可以与 label 语句联合使用，从而返回代码中特定的位置。这种联合使用的情况"),a("strong",[t._v("多发生在循环嵌套")]),t._v("的情况下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noutermost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" outermost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 55")]),t._v("\n")])])]),a("ul",[a("li",[t._v("循环总共执行了 55 次，break 语句会强制退出循环（"),a("strong",[t._v("退出内部循环，退出外部循环")]),t._v("）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noutermost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" outermost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//95")]),t._v("\n")])])]),a("ul",[a("li",[t._v("循环总共执行了 95 次，continue 语句会强制继续执行循环（退出内部循环，执行外部循环）。")])]),t._v(" "),a("p",[t._v("虽然联用 break、continue 和 label 语句能够执行复杂的操作，但如果使用过度，也会给调试带来麻烦。在此，我们建议如果使用 label 语句，一定要使用描述性的标签，同时不要嵌套过多的循环。")]),t._v(" "),a("h3",{attrs:{id:"_3-6-8-with-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-8-with-语句"}},[t._v("#")]),t._v(" 3.6.8 with 语句")]),t._v(" "),a("p",[a("strong",[t._v("将代码的作用域设置到一个特定的对象中")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2.使用")])])]),t._v(" "),a("ul",[a("li",[t._v("使用 with 语句关联了 expression 对象。")]),t._v(" "),a("li",[t._v("statement 中每个变量首先被认为是一个局部变量，而如果在局部环境中找不到该变量的定义，就会查询 expression 对象中是否有同名的属性")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" qs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hostName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//上面几行代码都包含location 对象。使用with 语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" qs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hostName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" href"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("严格模式下不允许使用 with 语句，否则将视为语法错误。")])]),t._v(" "),a("p",[t._v("由于大量使用 with 语句会导致性能下降，同时也会给调试代码造成困难，因此在开发大型应用程序时，不建议使用 with 语句。")]),t._v(" "),a("h3",{attrs:{id:"_3-6-9-switch-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-9-switch-语句"}},[t._v("#")]),t._v(" 3.6.9 switch 语句")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("case 的含义是：“如果表达式等于这个值（value），则执行后面的语句（statement）”。")]),t._v(" "),a("li",[t._v("break 关键字会导致代码执行流跳出 switch 语句。省略 break 关键字，就会导致执行完当前 case 后，继续执行下一个 case。")]),t._v(" "),a("li",[t._v("default 关键字则用于在表达式不匹配前面任何一种情形的时候，执行机动代码")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2.特殊之处")])])]),t._v(" "),a("p",[t._v("ECMAScript 中的 switch 语句借鉴自其他语言，但这个语句也有"),a("strong",[t._v("自己的特色")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首先，可以在 switch 语句中使用"),a("strong",[t._v("任何数据类型")]),t._v("（在很多其他语言中只能使用数值），无论是字符串，还是对象都没有问题。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" world"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Greeting was found."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Closing was found."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unexpected message was found."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 结果就会显示"Greeting was found."。')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("其次，每个 case 的值不一定是常量，可以是"),a("strong",[t._v("变量")]),t._v("，甚至是表达式。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Less than 0."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Between 0 and 10."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Between 10 and 20."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"More than 20."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("switch 语句传递表达式 true，是"),a("strong",[t._v("因为每个 case 值都可以返回一个布尔")]),t._v("值。")])]),t._v(" "),a("li",[a("p",[t._v("这样，每个 case 按照顺序被求值，直到找到匹配的值或者遇到 default 语句为止（这正是这个例子的最终结果）。")])])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3.使用的是全等操作符")])])]),t._v(" "),a("p",[t._v("switch 语句在比较值时使用的是全等操作符，因此"),a("strong",[t._v("不会发生类型转换")]),t._v('（例如，字符串"10"不等于数值 10）。')]),t._v(" "),a("h2",{attrs:{id:"_3-7-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-函数"}},[t._v("#")]),t._v(" 3.7 函数")]),t._v(" "),a("p",[t._v("可以封装任意多条语句，而且可以在任何地方、任何时候调用执行。")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.语法")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("functionName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("argN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  statements\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("2.使用")])])]),t._v(" "),a("p",[t._v("ECMAScript 中的函数在定义时不必指定是否返回值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("位于 return 语句之后的任何代码都永远不会执行。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 永远不会执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("return 语句也可以不带有任何返回值。在这种情况下，函数在停止执行后将返回 undefined 值")])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3.严格模式对函数有一些限制：")])])]),t._v(" "),a("ul",[a("li",[t._v("不能把函数命名为 eval 或 arguments；")]),t._v(" "),a("li",[t._v("不能把参数命名为 eval 或 arguments；")]),t._v(" "),a("li",[t._v("不能出现两个命名参数同名的情况；")])]),t._v(" "),a("p",[t._v("如果发生以上情况，就会导致语法错误，代码无法执行。")]),t._v(" "),a("h3",{attrs:{id:"_3-7-1-理解参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-1-理解参数"}},[t._v("#")]),t._v(" 3.7.1 理解参数")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.特殊之处")])])]),t._v(" "),a("p",[t._v("ECMAScript 函数的参数与大多数其他语言中函数的参数有所不同。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("不介意传递进来多少个参数")]),t._v("，"),a("strong",[t._v("不在乎传进来参数是什么数据类型")])]),t._v(" "),a("ul",[a("li",[t._v("原因：ECMAScript 中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数（如果有参数的话）。")])])]),t._v(" "),a("li",[a("p",[t._v("函数体内可以通过"),a("strong",[t._v("arguments 对象")]),t._v("来访问这个参数数组，从而获取传递给函数的每一个参数。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("arguments 对象只是与数组类似（它并不是 Array 的实例）。")])]),t._v(" "),a("li",[a("p",[t._v("函数也可以像下面这样重写（示例见前一节），即不显式地使用命名参数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("命名参数")]),t._v("只提供便利，但"),a("strong",[t._v("不是必需")]),t._v("的。")]),t._v(" "),a("ul",[a("li",[t._v("在命名参数方面，其他语言可能需要事先创建一个函数签名，而将来的调用必须与该签名一致。但在 ECMAScript 中，没有这些条条框框，解析器不会验证命名参数。")])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2. 利用 js 的函数特点")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("开发人员可以利用 js 的函数特点让函数能够"),a("strong",[t._v("接收任意个参数并分别实现适当的功能")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//50")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("arguments 对象可以与命名参数一起使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3. arguments 对象值 与 命名参数值")])])]),t._v(" "),a("p",[t._v("arguments 对象值永远与对应命名参数的值保持同步。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("修改 arguments[1]，也就修改了 num2；它们的内存空间是独立的，但它们的值会同步。")]),t._v(" "),a("li",[t._v("如果只传入了一个参数，那么为 arguments[1]设置的值不会反应到命名参数中。这是因为 arguments 对象的长度是由传入的参数个数决定的，不是由定义函数时的命名参数的个数决定的。")]),t._v(" "),a("li",[a("strong",[t._v("没有传递值的命名参数将自动被赋予 undefined 值")]),t._v("（因为 arguments 对象的长度是由传入的参数个数决定的，不是由定义函数时的命名参数的个数决定的。）")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("4.严格模式对如何使用 arguments 对象做出了一些限制：")])])]),t._v(" "),a("ul",[a("li",[t._v("首先，像前面例子中那样的赋值会变得无效。也就是说，即使把 arguments[1]设置为 10，num2 的值仍然还是 undefined。")]),t._v(" "),a("li",[t._v("其次，重写 arguments 的值会导致语法错误（代码将不会执行）。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("5. 参数是值类型")])])]),t._v(" "),a("p",[t._v("ECMAScript 中的所有参数"),a("strong",[t._v("传递的都是值")]),t._v("，"),a("strong",[t._v("不可能通过引用传递参数")]),t._v("。（见 4.1.3 传递参数）")]),t._v(" "),a("h3",{attrs:{id:"_3-7-2-没有重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-2-没有重载"}},[t._v("#")]),t._v(" 3.7.2 没有重载")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1. 没有签名")])])]),t._v(" "),a("ul",[a("li",[t._v("其他语言（如 Java）中，可以为一个函数编写两个定义，只要这两个定义的签名（接受的参数的类型和数量）不同即可。")]),t._v(" "),a("li",[a("strong",[t._v("ECMAScirpt 函数没有签名")]),t._v("，因为其参数是由包含零或多个值的数组来表示的。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2.没有重载")])])]),t._v(" "),a("p",[t._v("ECMAScript 中定义了两个名字相同的函数，则该名字只属于后定义的函数。"),a("strong",[t._v("后定义的函数覆盖了先定义的函数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSomeNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSomeNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSomeNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//300")]),t._v("\n")])])]),a("p",[a("strong",[a("em",[t._v("3.如何模仿重载")])])]),t._v(" "),a("p",[a("strong",[t._v("检查传入函数中参数的类型和数量并作出不同的反应，可以模仿方法的重载。")])]),t._v(" "),a("h2",{attrs:{id:"_3-8-小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-小结"}},[t._v("#")]),t._v(" 3.8 小结")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("1.ECMAScript 是 JavaScript 的核心语言")])])]),t._v(" "),a("ul",[a("li",[t._v("JavaScript 的核心语言特性在 ECMA-262 中是以名为 ECMAScript 的伪语言的形式来定义的。")]),t._v(" "),a("li",[t._v("ECMAScript 中包含了所有基本的语法、操作符、数据类型以及完成基本的计算任务所必需的对象，但没有对取得输入和产生输出的机制作出规定。")]),t._v(" "),a("li",[t._v("理解 ECMAScript 及其纷繁复杂的各种细节，是理解其在 Web 浏览器中的实现——JavaScript 的关键。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("2.ECMAScript 中基本的要素")])])]),t._v(" "),a("ul",[a("li",[t._v("ECMAScript 中的"),a("strong",[t._v("基本数据类")]),t._v("型包括 Undefined、Null、Boolean、Number 和 String。\n"),a("ul",[a("li",[t._v("与其他语言不同，ECMScript 没有为整数和浮点数值分别定义不同的数据类型，Number 类型可用于表示所有数值。")])])]),t._v(" "),a("li",[t._v("ECMAScript 中也有一种"),a("strong",[t._v("复杂的数据类型")]),t._v("，即 Object 类型，该类型是这门语言中所有对象的基础类型。")]),t._v(" "),a("li",[t._v("严格模式为这门语言中容易出错的地方施加了限制。")]),t._v(" "),a("li",[t._v("ECMAScript 提供了很多与 C 及其他类 C 语言中相同的"),a("strong",[t._v("基本操作符")]),t._v("，包括算术操作符、布尔操作符、关系操作符、相等操作符及赋值操作符等。")]),t._v(" "),a("li",[t._v("ECMAScript 从其他语言中借鉴了很多"),a("strong",[t._v("流控制语句")]),t._v("，例如 if 语句、for 语句和 switch 语句等。")])]),t._v(" "),a("p",[a("strong",[a("em",[t._v("3.ECMAScript 中的函数与其他语言中的函数有诸多不同之处")])])]),t._v(" "),a("ul",[a("li",[t._v("无须指定函数的返回值，因为任何 ECMAScript 函数都可以在任何时候返回任何值。")]),t._v(" "),a("li",[t._v("实际上，未指定返回值的函数返回的是一个特殊的 undefined 值。")]),t._v(" "),a("li",[t._v("ECMAScript 中也没有函数签名的概念，因为其函数参数是以一个包含零或多个值的数组的形式传递的。")]),t._v(" "),a("li",[t._v("可以向 ECMAScript 函数传递任意数量的参数，并且可以通过 arguments 对象来访问这些参数。")]),t._v(" "),a("li",[t._v("由于不存在函数签名的特性，ECMAScript 函数不能重载。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);