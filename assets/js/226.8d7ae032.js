(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{594:function(t,a,s){"use strict";s.r(a);var e=s(16),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"通过摇树来减少-javascript-负载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过摇树来减少-javascript-负载"}},[t._v("#")]),t._v(" 通过摇树来减少 JavaScript 负载")]),t._v(" "),s("p",[t._v("当今的 Web 应用程序可能会变得很大，尤其是其中的 JavaScript 部分。截至 2018 年中，HTTP Archive 估计"),s("a",{attrs:{href:"https://httparchive.org/reports/state-of-javascript#bytesJs",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动设备"),s("OutboundLink")],1),t._v("上"),s("a",{attrs:{href:"https://httparchive.org/reports/state-of-javascript#bytesJs",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript"),s("OutboundLink")],1),t._v("的"),s("a",{attrs:{href:"https://httparchive.org/reports/state-of-javascript#bytesJs",target:"_blank",rel:"noopener noreferrer"}},[t._v("平均传输大小"),s("OutboundLink")],1),t._v("约为 350 KB。这只是传输大小！当通过网络发送 JavaScript 时，通常会对其进行压缩，这意味着在浏览器解压缩后，JavaScript 的"),s("em",[t._v("实际")]),t._v("数量要多得多。指出这一点很重要，因为就资源"),s("em",[t._v("处理")]),t._v("而言，压缩是无关紧要的。900 KB 的解压缩 JavaScript 仍然对解析器和编译器 900 KB，即使压缩后可能约为 300 KB。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-1.svg",alt:"该图说明了下载，解压缩，解析，编译和执行JavaScript的过程。"}}),s("strong",[t._v("图 1")]),t._v("。下载和运行 JavaScript 的过程。请注意，即使脚本的传输大小是 300 KB 压缩的，仍然必须解析，编译和执行的仍然是 900 KB 的 JavaScript。")]),t._v(" "),s("p",[t._v("JavaScript 是需要处理的昂贵资源。与下载后仅花费相对较少的解码时间的图像不同，必须先解析，编译然后最终执行 JavaScript。逐字节，这使得 JavaScript 比其他类型的资源昂贵。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-2-1x.png",alt:"该图将170 KB的JavaScript与同等大小的JPEG图像的处理时间进行了比较。 JavaScript资源比JPEG要占用更多的字节资源。"}}),s("strong",[t._v("图 2")]),t._v("。解析/编译 170 KB JavaScript 的处理成本与同等大小 JPEG 的解码时间相比。（"),s("a",{attrs:{href:"https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e",target:"_blank",rel:"noopener noreferrer"}},[t._v("来源"),s("OutboundLink")],1),t._v("）。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://v8.dev/blog/background-compilation",target:"_blank",rel:"noopener noreferrer"}},[t._v("尽管不断进行改进"),s("OutboundLink")],1),t._v("以 "),s("a",{attrs:{href:"https://blog.mozilla.org/javascript/2017/12/12/javascript-startup-bytecode-cache/",target:"_blank",rel:"noopener noreferrer"}},[t._v("提高 JavaScript 引擎的效率"),s("OutboundLink")],1),t._v("，但提高 JavaScript 性能与以往一样是适合开发人员的任务。毕竟，有谁比架构师本身更好地改善应用程序体系结构？")]),t._v(" "),s("p",[t._v("为此，存在提高 JavaScript 性能的技术。"),s("a",{attrs:{href:"https://webpack.js.org/guides/code-splitting/",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码拆分"),s("OutboundLink")],1),t._v("是一种这样的技术，它通过将应用程序 JavaScript 划分为多个块并将这些块仅提供给需要它们的应用程序的路由来提高性能。该技术有效，但不能解决 JavaScript 繁多的应用程序的常见问题，即包含从未使用过的代码。为了解决这个问题，我们依靠摇树。")]),t._v(" "),s("h2",{attrs:{id:"什么是摇树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是摇树"}},[t._v("#")]),t._v(" 什么是摇树？")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Tree_shaking",target:"_blank",rel:"noopener noreferrer"}},[t._v("摇树"),s("OutboundLink")],1),t._v("是消除死代码的一种形式。"),s("a",{attrs:{href:"https://github.com/rollup/rollup#tree-shaking",target:"_blank",rel:"noopener noreferrer"}},[t._v("该术语由 Rollup 推广"),s("OutboundLink")],1),t._v("，但消除无效代码的概念已经存在了一段时间。该概念还可以在"),s("a",{attrs:{href:"https://webpack.js.org/guides/tree-shaking/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack 中"),s("OutboundLink")],1),t._v("找到，在本文中通过示例应用程序进行了演示。")]),t._v(" "),s("p",[t._v("术语“摇树”来自您应用程序的思维模型及其作为树状结构的依赖关系。树中的每个节点都代表一个依赖项，该依赖项为您的应用程序提供了不同的功能。在现代应用程序中，这些依赖项是通过"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import",target:"_blank",rel:"noopener noreferrer"}},[t._v("静态"),s("code",[t._v("import")]),t._v(" 语句"),s("OutboundLink")],1),t._v("引入的， 如下所示：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import all the array utilities!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" arrayUtils "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'array-utils'")]),t._v("\n")])])]),s("p",[t._v("**注意：**如果您不确定什么是 ES6 模块，我强烈建议"),s("a",{attrs:{href:"https://ponyfoo.com/articles/es6-modules-in-depth",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Pony Foo 上"),s("OutboundLink")],1),t._v("使用"),s("a",{attrs:{href:"https://ponyfoo.com/articles/es6-modules-in-depth",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个出色的解释器"),s("OutboundLink")],1),t._v("。本指南假定您具有 ES6 模块的工作知识，因此，如果您不了解 ES6 模块，请阅读该文章！")]),t._v(" "),s("p",[t._v("当您的应用还很年轻时（如果您愿意的话，可以是树苗），您的依赖项可能相对较少。您还将使用添加的大多数（如果不是全部）依赖项。但是，随着您的应用程序老化，可以添加更多依赖项。更为复杂的是，较旧的依赖项已不再使用，但可能不会从您的代码库中删除。最终结果是，应用程序最终会附带大量"),s("a",{attrs:{href:"https://developers.google.cn/web/updates/2018/05/lighthouse#unused_javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("未使用的 JavaScript"),s("OutboundLink")],1),t._v("。摇树通过利用我们如何使用静态"),s("code",[t._v("import")]),t._v("语句引入 ES6 模块的特定部分来解决此问题：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import only some of the utilities!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" unique"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" implode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" explode "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'array-utils'")]),t._v("\n")])])]),s("p",[t._v("本"),s("code",[t._v("import")]),t._v("示例与上一个示例之间的区别在于，本示例仅导入模块的特定部分，而不是从模块中导入"),s("em",[t._v("所有内容")]),s("code",[t._v('"array-utils"')]),t._v("（可能很多东西！）。在开发版本中，这实际上并没有任何改变，因为整个模块都可以导入。在产品构建，但是，我们可以配置的 WebPack“换血”关 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("export")]),t._v("小号"),s("OutboundLink")],1),t._v(" 从 ES6 模块没有明确的进口，使这些产品构建更小。在本指南中，您将学习如何做到这一点！")]),t._v(" "),s("h2",{attrs:{id:"寻找机会摇一棵树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寻找机会摇一棵树"}},[t._v("#")]),t._v(" 寻找机会摇一棵树")]),t._v(" "),s("p",[t._v("出于说明目的，我创建"),s("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("了一个样本单页应用程序"),s("OutboundLink")],1),t._v("，该"),s("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("应用程序"),s("OutboundLink")],1),t._v("使用 webpack 演示摇树的工作原理。您可以克隆它并按照自己的意愿进行操作，但是在本指南中我们将一起介绍每一个步骤，因此不需要克隆（除非您需要动手学习）。")]),t._v(" "),s("p",[t._v("示例应用程序是吉他效果踏板的超级简单可搜索数据库。您输入一个查询，并弹出效果踏板列表。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-3-1x.png",alt:"用于搜索吉他效果踏板数据库的示例一页应用程序的屏幕快照。"}}),s("strong",[t._v("图 3")]),t._v("。示例应用程序的屏幕截图。")]),t._v(" "),s("p",[t._v("可以预见，驱动此应用程序的行为分为供应商（即 "),s("a",{attrs:{href:"https://preactjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Preact"),s("OutboundLink")],1),t._v("和"),s("a",{attrs:{href:"https://emotion.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Emotion"),s("OutboundLink")],1),t._v("）和特定于应用程序的代码束（或 webpack 称为“块”）：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-4-1x.png",alt:"Chrome的DevTools的网络面板中显示的两个应用程序代码包（或代码块）的屏幕快照。"}}),s("strong",[t._v("图 4")]),t._v("。该应用程序的两个 JavaScript 捆绑包。这些是未压缩的大小。")]),t._v(" "),s("p",[t._v("上图中显示的 JavaScript 捆绑包是生产版本，这意味着它们通过"),s("a",{attrs:{href:"http://lisperator.net/uglifyjs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("uglification"),s("OutboundLink")],1),t._v("进行了优化。21.1 KB 为应用程序特定的束不差（象"),s("em",[t._v("在所有")]),t._v("）。但！应该注意的是，没有任何树木在摇晃。让我们看一下应用程序代码，看看我们可以做些什么来解决这个问题。")]),t._v(" "),s("p",[t._v("**注意：**如果您不关心冗长的解释，而只是想深入研究代码，则可以继续并查看 应用程序的 GitHub 存储库中"),s("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example/tree/tree-shake",target:"_blank",rel:"noopener noreferrer"}},[t._v("的"),s("code",[t._v("tree-shake")]),t._v(" 分支"),s("OutboundLink")],1),t._v("。您还可以"),s("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example/compare/tree-shake",target:"_blank",rel:"noopener noreferrer"}},[t._v("比较该分支， "),s("code",[t._v("master")]),s("OutboundLink")],1),t._v(" 以查看为使摇树工作而进行的更改！")]),t._v(" "),s("p",[t._v("在任何应用程序中，寻找摇树的机会都将涉及寻找静态"),s("code",[t._v("import")]),t._v("语句。"),s("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example/blob/master/src/components/FilterablePedalList/FilterablePedalList.js#L4",target:"_blank",rel:"noopener noreferrer"}},[t._v("在主要组件文件顶部附近"),s("OutboundLink")],1),t._v("，您将看到如下一行：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" utils "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../../utils/utils'")]),t._v("\n")])])]),s("p",[t._v("也许您以前看过类似的东西。ES6 模块导出的导入方法很多，但是类似的方法应该引起您的注意。这种特殊的线说：“嘿，"),s("code",[t._v("import")]),t._v(" "),s("em",[t._v("一切")]),t._v("从 "),s("code",[t._v("utils")]),t._v("模块，并把它放在一个叫做命名空间"),s("code",[t._v("utils")]),t._v("。” 这里要问的最大问题是：“ 该模块中到底有多少"),s("em",[t._v("东西")]),t._v("？”")]),t._v(" "),s("p",[t._v("好吧，如果你看一下"),s("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example/blob/master/src/utils/utils.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("该"),s("code",[t._v("utils")]),t._v("模块的源代码"),s("OutboundLink")],1),t._v("，你会发现有一个"),s("em",[t._v("很大")]),t._v("。就像大约 1,300 行代码。")]),t._v(" "),s("p",[t._v("好的，不用担心。也许所有这些东西都被使用了，对吧？"),s("em",[t._v("难道")]),t._v("我们需要所有的东西？让我们通过搜索 导入模块"),s("a",{attrs:{href:"https://github.com/malchata/webpack-tree-shaking-example/blob/master/src/components/FilterablePedalList/FilterablePedalList.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("的主要组件文件进行"),s("OutboundLink")],1),t._v("仔细检查"),s("code",[t._v("utils")]),t._v("，看看出现了多少个命名空间实例。当然，我们必须将所有这些东西用于"),s("em",[t._v("某种东西")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-5-1x.png",alt:"在文本编辑器中搜索“ utils。”的屏幕快照，仅返回3个结果。"}}),s("strong",[t._v("图 5")]),t._v("。我们从中导入了大量模块的 utils 名称空间在主组件文件中仅被调用了 3 次。")]),t._v(" "),s("p",[t._v("好吧，"),s("em",[t._v("那")]),t._v("不好。我们仅"),s("code",[t._v("utils")]),t._v("在应用程序代码的三个位置使用名称空间。但是对于什么功能呢？如果我们再次看一下主要组件文件，它似乎只是一个函数，它是 "),s("code",[t._v("utils.simpleSort")]),t._v("，当更改下拉列表时，该函数用于根据许多条件对搜索结果列表进行排序：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortBy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'model'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Simple sort gets used here...")]),t._v("\n  json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'model'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortBy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..and here...")]),t._v("\n  json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..and here.")]),t._v("\n  json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'manufacturer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("所以，那太好了。在具有一堆出口的 1,300 行文件中，我仅使用其中一个。事实证明，我对 webperfs 相当不满意。")]),t._v(" "),s("p",[t._v("**注意：**该项目有意保持简单，因此在这种情况下很容易找出膨胀的来源。但是，在具有许多模块的大型项目中，很难找出捆绑包中有多少由进口构成。等工具"),s("a",{attrs:{href:"https://www.npmjs.com/package/webpack-bundle-analyzer",target:"_blank",rel:"noopener noreferrer"}},[t._v("的 WebPack 包分析器"),s("OutboundLink")],1),t._v("和 "),s("a",{attrs:{href:"https://www.npmjs.com/package/source-map-explorer",target:"_blank",rel:"noopener noreferrer"}},[t._v("源地图的探险家"),s("OutboundLink")],1),t._v("仍处于开发阶段会有所帮助，但辅助工具，以填补这方面的需求。")]),t._v(" "),s("p",[t._v("当然，现在是承认这个例子是一个时间"),s("em",[t._v("位")]),t._v("为这篇文章的利益制造。尽管在这里绝对是这种情况，但这并不能改变这种综合场景类似于您在自己非常真实的应用程序中可能遇到的实际优化机会的事实。因此，既然您已经确定了摇树有用的机会，那么我们实际上"),s("em",[t._v("该如何做")]),t._v("呢？")]),t._v(" "),s("h2",{attrs:{id:"防止-babel-将-es6-模块转换为-commonjs-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防止-babel-将-es6-模块转换为-commonjs-模块"}},[t._v("#")]),t._v(" 防止 Babel 将 ES6 模块转换为 CommonJS 模块")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel"),s("OutboundLink")],1),t._v("是大多数应用程序必不可少的工具。不幸的是，正是"),s("em",[t._v("由于")]),t._v("它为我们所做的事情，它也会使诸如摇树这样的简单任务变得更加困难。如果您使用 "),s("a",{attrs:{href:"https://babeljs.io/docs/plugins/preset-env/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("babel-preset-env")]),s("OutboundLink")],1),t._v("，它会自动为您完成的一件事情就是将您的漂亮的 ES6 模块转换为更广泛兼容的 CommonJS 模块（即，您使用"),s("code",[t._v("require")]),t._v("而不是的模块"),s("code",[t._v("import")]),t._v("）。一切都很棒，直到我们要开始摇树。")]),t._v(" "),s("p",[t._v("问题在于，对于 CommonJS 模块而言，摇树要困难得多，如果您决定使用它们，webpack 将不知道从捆绑软件中删除什么。解决方案很简单：我们配置"),s("code",[t._v("babel-preset-env")]),t._v("为不使用 ES6 模块。无论您在何处配置 Babel（位于"),s("code",[t._v(".babelrc")]),t._v("或中 "),s("code",[t._v("package.json")]),t._v("），都意味着要添加一些额外的内容：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"modules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("只需"),s("code",[t._v('"modules": false')]),t._v("在您的"),s("code",[t._v("babel-preset-env")]),t._v("配置中指定即可使 Babel 表现出我们想要的行为，这使 webpack 可以分析您的依赖关系树并摆脱那些未使用的依赖关系。此外，此过程不会引起兼容性问题，因为 webpack 最终会将您的代码转换为广泛兼容的格式。")]),t._v(" "),s("h2",{attrs:{id:"注意副作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意副作用"}},[t._v("#")]),t._v(" 注意副作用")]),t._v(" "),s("p",[t._v("从应用程序摆脱依赖关系时要考虑的另一个方面是项目的模块是否有副作用。一个副作用的例子是当一个函数在其自身作用域之外修改某些东西时，这是 其执行的"),s("em",[t._v("副作用")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fruits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'orange'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pear'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// (3) ["apple", "orange", "pear"]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("addFruit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fruit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fruits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFruit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kiwi'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// (4) ["apple", "orange", "pear", "kiwi"]')]),t._v("\n")])])]),s("p",[t._v("在这个非常基本的示例中，"),s("code",[t._v("addFruit")]),t._v("修改"),s("code",[t._v("fruits")]),t._v("数组会产生副作用，这超出了"),s("code",[t._v("addFruit")]),t._v("函数的范围。")]),t._v(" "),s("p",[t._v("副作用也适用于 ES6 模块，这在摇树的情况下很重要。采取可预测的输入并吐出相等可预测的输出而不修改其自身范围之外的任何内容的模块是依赖项，如果不使用它们，我们可以放心地摇晃它们。它们是独立的"),s("em",[t._v("模块化")]),t._v(" 代码段。因此，“模块”。")]),t._v(" "),s("p",[t._v("在涉及 webpack 的地方，我们可以通过"),s("code",[t._v('"sideEffects": false')]),t._v("在项目的 "),s("code",[t._v("package.json")]),t._v("文件中指定来暗示软件包及其依赖项没有副作用：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack-tree-shaking-example"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sideEffects"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("或者，您可以告诉 webpack 哪些特定文件不是没有副作用的：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack-tree-shaking-example"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sideEffects"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/utils/utils.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在后一个示例中，未指定的任何文件都将被认为没有副作用。如果您不想将其添加到"),s("code",[t._v("package.json")]),t._v("文件中，"),s("a",{attrs:{href:"https://github.com/webpack/webpack/issues/6065#issuecomment-351060570",target:"_blank",rel:"noopener noreferrer"}},[t._v("也可以通过以下方式在 webpack 配置中指定此标志： "),s("code",[t._v("module.rules")]),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"仅导入我们需要的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仅导入我们需要的"}},[t._v("#")]),t._v(" 仅导入我们需要的")]),t._v(" "),s("p",[t._v("因此，我们告诉 Babel 保留我们的 ES6 模块，但是现在我们需要对"),s("code",[t._v("import")]),t._v("语法进行一些调整，以仅引入"),s("code",[t._v("utils")]),t._v("模块中需要的功能。在本指南的示例中，我们需要做的是"),s("code",[t._v("simpleSort")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" simpleSort "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../../utils/utils'")]),t._v("\n")])])]),s("p",[t._v("使用这种语法，我们说的是“嘿，只让我"),s("code",[t._v("simpleSort")]),t._v("从"),s("code",[t._v("utils")]),t._v("模块导出。” 因为我们仅将"),s("code",[t._v("simpleSort")]),t._v("而不是整个"),s("code",[t._v("utils")]),t._v("模块引入全局范围，所以我们需要将每个实例更改 "),s("code",[t._v("utils.simpleSort")]),t._v("为"),s("code",[t._v("simpleSort")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortBy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'model'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'model'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortBy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleSort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'manufacturer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sortOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("现在我们已经完成了摇树工作所需的一切，让我们退后一步。这是摇动依赖关系树"),s("em",[t._v("之前")]),t._v("的 webpack 输出：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("                 Asset      Size  Chunks             Chunk Names\njs/vendors.16262743.js  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.1")]),t._v(" KiB       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("emitted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  vendors\n   js/main.797ebb8b.js  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.8")]),t._v(" KiB       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("emitted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  main\n")])])]),s("p",[t._v("这是树木摇晃到位"),s("em",[t._v("后")]),t._v("的输出：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("                 Asset      Size  Chunks             Chunk Names\njs/vendors.45ce9b64.js  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36.9")]),t._v(" KiB       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("emitted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  vendors\n   js/main.559652be.js  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.46")]),t._v(" KiB       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("emitted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  main\n")])])]),s("p",[t._v("虽然这两个捆绑包都缩水了，但实际上"),s("code",[t._v("main")]),t._v("这是最大的捆绑包。通过淘汰"),s("code",[t._v("utils")]),t._v("模块中未使用的部分，我们设法从该捆绑包中砍掉了大约 60％的代码。这不仅减少了脚本下载所需的时间，还缩短了处理时间。")]),t._v(" "),s("h2",{attrs:{id:"当事情不是那么简单时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当事情不是那么简单时"}},[t._v("#")]),t._v(" 当事情不是那么简单时")]),t._v(" "),s("p",[t._v("在大多数情况下，如果您进行了一些细微的更改，摇晃树就可以在最新版本的 webpack 中工作，但是总有一些例外情况会让您抓狂。例如，"),s("a",{attrs:{href:"https://lodash.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lodash"),s("OutboundLink")],1),t._v("在摇树时有点奇怪，因为本指南中描述的方法不起作用。由于 Lodash 的架构方式，您必须 a）安装 "),s("a",{attrs:{href:"https://www.npmjs.com/package/lodash-es",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("lodash-es")]),s("OutboundLink")],1),t._v("软件包以代替常规 old，"),s("a",{attrs:{href:"https://www.npmjs.com/package/lodash",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("lodash")]),s("OutboundLink")],1),t._v("并 b）使用略有不同的语法（称为“樱桃采摘”）摆脱其他依赖项：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This still pulls in all of lodash even if everything is configured right.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" sortBy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This will only pull in the sortBy routine.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sortBy "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash-es/sortBy'")]),t._v("\n")])])]),s("p",[t._v("如果您希望"),s("code",[t._v("import")]),t._v("语法保持一致，则"),s("em",[t._v("可以")]),t._v("使用标准"),s("code",[t._v("lodash")]),t._v("软件包，然后安装 "),s("a",{attrs:{href:"http://babel-plugin-lodash/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("babel-plugin-lodash")]),s("OutboundLink")],1),t._v("。将插件添加到 Babel 配置中后，就可以使用典型的"),s("code",[t._v("import")]),t._v("语法来震动未使用的导出。")]),t._v(" "),s("p",[t._v("如果遇到无法响应树抖动的顽固库，请查看它是否使用 ES6 语法导出其方法。如果它以 CommonJS 格式（例如"),s("code",[t._v("module.exports")]),t._v("）导出内容，则该代码不会被 webpack 摇晃。有些插件为 CommonJS 模块提供了摇树功能（例如 "),s("a",{attrs:{href:"https://github.com/indutny/webpack-common-shake",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("webpack-common-shake")]),s("OutboundLink")],1),t._v("），但这只能达到"),s("a",{attrs:{href:"https://github.com/indutny/webpack-common-shake#limitations",target:"_blank",rel:"noopener noreferrer"}},[t._v("某些您无法摇晃的 CommonJS 模式的程度"),s("OutboundLink")],1),t._v("。如果要可靠地摆脱应用程序中未使用的依赖项，则应继续使用 ES6 模块。")]),t._v(" "),s("h2",{attrs:{id:"去摇一些树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去摇一些树"}},[t._v("#")]),t._v(" 去摇一些树！")]),t._v(" "),s("p",[t._v("无论您摆脱摇摇欲坠的里程数，都取决于您的应用程序及其特定的依赖项和体系结构。试试吧！如果您知道没有设置模块捆绑程序来执行此优化的事实，那么尝试看看对应用程序有什么好处就没有什么害处。您可以从捆绑软件中删除的任何未使用的代码都是值得进行的优化。")]),t._v(" "),s("p",[t._v("您可能会从摇树中意识到很多收获，或者根本没有收获。但是，通过将构建系统配置为在生产构建中利用此优化优势，并有选择地仅导入应用程序需要的内容，您将主动保持应用程序尽可能的薄。这对于性能以及扩展您的用户都是有好处的。")]),t._v(" "),s("p",[s("em",[t._v("特别感谢 Kristofer Baxter，Jason Miller，"),s("a",{attrs:{href:"https://developers.google.cn/web/resources/contributors/addyosmani",target:"_blank",rel:"noopener noreferrer"}},[t._v("Addy Osmani"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developers.google.cn/web/resources/contributors/jeffposnick",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jeff Posnick"),s("OutboundLink")],1),t._v("，Sam Saccone 和"),s("a",{attrs:{href:"https://developers.google.cn/web/resources/contributors/philipwalton",target:"_blank",rel:"noopener noreferrer"}},[t._v("Philip Walton"),s("OutboundLink")],1),t._v("的宝贵反馈，这些反馈显着提高了本文的质量。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);