(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{666:function(t,e,r){"use strict";r.r(e);var a=r(16),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"关键渲染路径"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关键渲染路径"}},[t._v("#")]),t._v(" 关键渲染路径")]),t._v(" "),r("p",[r("em",[t._v("优化关键渲染路径")]),t._v("是指优先显示与当前用户操作有关的内容。")]),t._v(" "),r("p",[t._v("要提供快速的网络体验，浏览器需要做许多工作。这类工作大多数是我们这些网络开发者看不到的：我们编写标记，屏幕上就会显示出漂亮的页面。")]),t._v(" "),r("p",[t._v("但浏览器到底是如何使用我们的 HTML、CSS 和 JavaScript 在屏幕上渲染像素的呢？")]),t._v(" "),r("p",[t._v("从收到 HTML、CSS 和 JavaScript 字节到对其进行必需的处理，从而将它们转变成渲染的像素这一过程中有一些中间步骤，优化性能其实就是了解这些步骤中发生了什么 - 即"),r("strong",[t._v("关键渲染路径")]),t._v("。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/critical-rendering-path/images/progressive-rendering.png",alt:"渐进式页面渲染"}})]),t._v(" "),r("p",[t._v("通过优化关键渲染路径，我们可以显著缩短首次渲染页面的时间。 此外，了解关键渲染路径还可以为构建高性能交互式应用打下基础。")]),t._v(" "),r("p",[t._v("处理交互式更新的过程是相同的，只是在连续循环中完成，理想情况下每秒可以处理 60 帧！不过，我们先来看一下浏览器如何显示简单的网页。")])])}),[],!1,null,null,null);e.default=n.exports}}]);