(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{556:function(e,a,n){"use strict";n.r(a);var t=n(16),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"利用长期缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#利用长期缓存"}},[e._v("#")]),e._v(" 利用长期缓存")]),e._v(" "),n("p",[e._v("改善应用程序加载时间的下一件事（"),n("a",{attrs:{href:"https://developers.google.cn/web/fundamentals/performance/webpack/decrease-frontend-size",target:"_blank",rel:"noopener noreferrer"}},[e._v("优化应用程序大小之后"),n("OutboundLink")],1),e._v("）是缓存。使用它可以将部分应用程序保留在客户端上，并避免每次都重新下载它们。")]),e._v(" "),n("h2",{attrs:{id:"使用捆绑软件版本控制和缓存头"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用捆绑软件版本控制和缓存头"}},[e._v("#")]),e._v(" 使用捆绑软件版本控制和缓存头")]),e._v(" "),n("p",[e._v("进行缓存的常见方法是：")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("告诉浏览器将文件缓存很长时间（例如一年）：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("＃服务器头缓存- 控制：最大值- 年龄= 31536000\n")])])]),n("p",[e._v("注意：如果您不熟悉"),n("code",[e._v("Cache-Control")]),e._v("的功能，请参阅 Jake Archibald")]),e._v(" "),n("p",[e._v("关于缓存最佳实践")]),e._v(" "),n("p",[e._v("的出色文章。")])]),e._v(" "),n("li",[n("p",[e._v("并在更改文件后重命名该文件以强制重新下载：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<！-更改之前->\n<script src = “ 。/ index-v15 。js ” > </ script>\n\n<！-更改后->\n<script src = “ 。/ index-v16 。js ” > </ script>\n")])])])])]),e._v(" "),n("p",[e._v("这种方法告诉浏览器下载 JS 文件，对其进行缓存并使用缓存的副本。仅当文件名更改（或一年过去）时，浏览器才可以访问网络。")]),e._v(" "),n("p",[e._v("使用 webpack，您可以执行相同的操作，但是可以指定文件哈希值，而不是版本号。要将哈希值包含到文件名中，请使用 "),n("a",{attrs:{href:"https://webpack.js.org/configuration/output/#output-filename",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("[chunkhash\\]")]),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js\n模块。出口= {\n  压缩：“ ./ index 。js ”，\n  输出：{\n    档名：'bundle。[chunkhash] .js' ，\n        //→bundle.8e0d62a03.js\n  }，\n};\n")])])]),n("p",[e._v("**注意：**即使捆绑包保持不变，Webpack 也会生成不同的哈希值-例如，即使您重命名文件或在其他操作系统下编译捆绑包。这是一个错误，目前尚无明确的解决方案。"),n("a",{attrs:{href:"https://github.com/webpack/webpack/issues/1479",target:"_blank",rel:"noopener noreferrer"}},[e._v("查看 GitHub 上的讨论"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("如果需要文件名将其发送到客户端，请使用"),n("code",[e._v("HtmlWebpackPlugin")]),e._v("或 "),n("code",[e._v("WebpackManifestPlugin")]),e._v("。")]),e._v(" "),n("p",[e._v("这"),n("a",{attrs:{href:"https://github.com/jantimon/html-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("HtmlWebpackPlugin")]),n("OutboundLink")],1),e._v("是一种简单但不太灵活的方法。在编译期间，此插件会生成一个 HTML 文件，其中包含所有已编译的资源。如果您的服务器逻辑并不复杂，那么对您来说应该足够了：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\x3c!-- index.html --\x3e\n<!doctype html>\n\x3c!-- ... --\x3e\n<script src="bundle.8e0d62a03.js"><\/script>\n')])])]),n("p",[e._v("这 "),n("a",{attrs:{href:"https://github.com/danethurber/webpack-manifest-plugin",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("WebpackManifestPlugin")]),n("OutboundLink")],1),e._v(" 是一种更灵活的方法，如果您拥有复杂的服务器部件，则很有用。在构建期间，它将生成一个 JSON 文件，该文件具有无哈希文件名和具有哈希值的文件名之间的映射。在服务器上使用此 JSON 找出要使用的文件：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// manifest.json\n{\n  "bundle.js": "bundle.8e0d62a03.js"\n}\n')])])]),n("h3",{attrs:{id:"进一步阅读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进一步阅读"}},[e._v("#")]),e._v(" 进一步阅读")]),e._v(" "),n("ul",[n("li",[e._v("杰克·阿奇博尔德（Jake Archibald）"),n("a",{attrs:{href:"https://jakearchibald.com/2016/caching-best-practices/",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于缓存最佳做法"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"将依赖项和运行时提取到单独的文件中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#将依赖项和运行时提取到单独的文件中"}},[e._v("#")]),e._v(" 将依赖项和运行时提取到单独的文件中")]),e._v(" "),n("h3",{attrs:{id:"依存关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依存关系"}},[e._v("#")]),e._v(" 依存关系")]),e._v(" "),n("p",[e._v("应用程序依存关系的更改频率往往少于实际应用程序代码。如果将它们移动到单独的文件中，则浏览器将能够分别缓存它们-并且不会在应用程序代码每次更改时重新下载它们。")]),e._v(" "),n("p",[e._v("**关键术语：**在 webpack 术语中，带有应用程序代码的单独文件称为 "),n("em",[e._v("chunks")]),e._v("。我们稍后将使用该名称。")]),e._v(" "),n("p",[e._v("要将依赖项提取到单独的块中，请执行三个步骤：")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("将输出文件名替换为")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[name].[chunkname].js\n")])])]),n("p",[e._v("：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js\n模块。出口= {\n  输出：{\n    //之前\n    filename ：'bundle。[chunkhash] .js' ，\n    //之后\n    filename ：'[name]。[chunkhash] .js' ，\n  }，\n};\n")])])]),n("p",[e._v("当 webpack 生成应用程序时，它将替换")]),e._v(" "),n("p",[n("code",[e._v("[name]")])]),e._v(" "),n("p",[e._v("为一个块的名称。如果我们不添加")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[name]\n")])])]),n("p",[e._v("零件，则必须通过散列对其进行区分，这非常困难！")])]),e._v(" "),n("li",[n("p",[e._v("将")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("entry\n")])])]),n("p",[e._v("字段转换为对象：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js\n模块。出口= {\n  //之前\n  压缩：“ ./ index 。js ”，\n  //之后\n  压缩：{\n    main ：'./index.js' ，\n  }，\n};\n")])])]),n("p",[e._v("在此代码段中，“ main”是块的名称。该名称将代替"),n("code",[e._v("[name]")]),e._v("步骤 1 中的名称。")]),e._v(" "),n("p",[e._v("到目前为止，如果您构建应用程序，则该块将包含整个应用程序代码–就像我们尚未完成这些步骤一样。但这将在几秒钟内改变。")])]),e._v(" "),n("li",[n("p",[e._v("**在 webpack 4 中，**将该"),n("code",[e._v("optimization.splitChunks.chunks: 'all'")]),e._v("选项添加到您的 webpack 配置中：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js（适用于webpack 4）\n模块。出口= {\n  优化：{\n    splitChunks ：{\n      块：“全部”，\n    }\n  }，\n};\n")])])]),n("p",[e._v("此选项启用智能代码拆分。有了它，如果 webpack 大于 30 kB（在压缩和 gzip 压缩之前），它将提取供应商代码。它还将提取通用代码-如果您的构建产生多个捆绑包（例如"),n("a",{attrs:{href:"https://developers.google.cn/web/fundamentals/performance/webpack/use-long-term-caching#split-the-code-into-routes-and-pages",target:"_blank",rel:"noopener noreferrer"}},[e._v("，将您的应用拆分为路由"),n("OutboundLink")],1),e._v("），这将非常有用 。")]),e._v(" "),n("p",[e._v("**在 webpack 3 中，**添加"),n("a",{attrs:{href:"https://webpack.js.org/plugins/commons-chunk-plugin/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("CommonsChunkPlugin")]),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js（适用于webpack 3）\n模块。出口= {\n  插件：[\n    新的webpack 。优化。CommonsChunkPlugin （{\n      //包含依赖项的块的名称。\n      //用此名称代替步骤1中的[name]\n      名称：'vendor' ，\n\n      //一个函数，该函数确定要包含在此块中的模块\n      minChunks ：模块=> 模块。上下文&&\n        模块。情境。包括（'node_modules' ），\n    }），\n  ]，\n};\n")])])]),n("p",[e._v("该插件获取路径包含的所有模块，"),n("code",[e._v("node_modules")]),e._v("并将其移至名为的单独文件中"),n("code",[e._v("vendor.[chunkhash].js")]),e._v("。")])])]),e._v(" "),n("p",[e._v("完成这些更改后，每个构建将生成两个文件，而不是一个："),n("code",[e._v("main.[chunkhash].js")]),e._v("和 "),n("code",[e._v("vendor.[chunkhash].js")]),e._v("（"),n("code",[e._v("vendors~main.[chunkhash].js")]),e._v("对于 webpack 4）。对于 webpack 4，如果依赖性较小，则可能不会生成供应商捆绑包-很好：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ webpack\n哈希：ac01483e8fec1fa70676\n版本：webpack 3.8 。1个\n时间：3816ms\n                           资产规模块名称\n  ./ main 。00bab6fd3100008a42b0.js 82 kB 0 [ 发出] 主\n./ 供应商。d9e134771799ecdf9483 。js 47 kB 1 [发射]供应商\n")])])]),n("p",[e._v("浏览器将分别缓存这些文件-并仅重新下载更改的代码。")]),e._v(" "),n("h3",{attrs:{id:"webpack-运行时代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-运行时代码"}},[e._v("#")]),e._v(" Webpack 运行时代码")]),e._v(" "),n("p",[e._v("不幸的是，仅提取供应商代码是不够的。如果您尝试更改应用程序代码中的某些内容：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// index.js\n…\n…\n\n// E.g. add this:\nconsole.log('Wat');\n")])])]),n("p",[e._v("您会注意到"),n("code",[e._v("vendor")]),e._v("哈希值也发生了变化：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("                           资产规模块名称\n./ 供应商。d9e134771799ecdf9483 。js 47 kB 1 [发射]供应商\n")])])]),n("p",[e._v("↓")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("                            资产规模块名称\n./ 供应商。e6ea4504d61a1cc1c60b 。js 47 kB 1 [发射]供应商\n")])])]),n("p",[e._v("发生这种情况的原因是，除了模块代码之外，Webpack 捆绑包还"),n("a",{attrs:{href:"https://webpack.js.org/concepts/manifest/",target:"_blank",rel:"noopener noreferrer"}},[n("em",[e._v("具有运行时")]),n("OutboundLink")],1),e._v(" -一小段代码，用于管理模块的执行。当您将代码拆分为多个文件时，这段代码开始包括块 ID 与相应文件之间的映射：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// vendor.e6ea4504d61a1cc1c60b.js\nscript.src = __webpack_require__.p + chunkId + "." + {\n  "0": "2f2269c7f0a55a5c1871"\n}[chunkId] + ".js";\n')])])]),n("p",[e._v("Webpack 将此运行时包含在最后一个生成的块中，"),n("code",[e._v("vendor")]),e._v(" 在我们的例子中。每次任何块更改时，这段代码也会更改，从而导致整个"),n("code",[e._v("vendor")]),e._v("块都更改。")]),e._v(" "),n("p",[e._v("为了解决这个问题，让我们将运行时移到一个单独的文件中。**在 webpack 4 中，**这可以通过启用以下"),n("code",[e._v("optimization.runtimeChunk")]),e._v("选项来实现：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js (for webpack 4)\nmodule.exports = {\n  optimization: {\n    runtimeChunk: true,\n  },\n};\n")])])]),n("p",[e._v("**在 webpack 3 中，**通过使用创建一个额外的空块来做到这一点"),n("code",[e._v("CommonsChunkPlugin")]),e._v("：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js (for webpack 3)\nmodule.exports = {\n  plugins: [\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n\n      minChunks: module => module.context &&\n        module.context.includes('node_modules'),\n    }),\n\n    // This plugin must come after the vendor one (because webpack\n    // includes runtime into the last chunk)\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'runtime',\n\n      // minChunks: Infinity means that no app modules\n      // will be included into this chunk\n      minChunks: Infinity,\n    }),\n  ],\n};\n")])])]),n("p",[e._v("完成这些更改后，每个构建将生成三个文件：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ webpack\n哈希：ac01483e8fec1fa70676\n版本：webpack 3.8 。1个\n时间：3816ms\n                            资产规模块名称\n   ./ main 。00bab6fd3100008a42b0.js 82 kB 0 [ 发出] 主\n ./ 供应商。26886caf15818fa82dfa 。js 46 kB 1 [发射]供应商\n./ 运行时。79f17c27b335abc7aaf4.js 1.45 kB 3 [发射]运行时\n")])])]),n("p",[n("code",[e._v("index.html")]),e._v("以相反的顺序将它们包括进来–完成了：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\x3c!-- index.html --\x3e\n<script src="./runtime.79f17c27b335abc7aaf4.js"><\/script>\n<script src="./vendor.26886caf15818fa82dfa.js"><\/script>\n<script src="./main.00bab6fd3100008a42b0.js"><\/script>\n')])])]),n("h3",{attrs:{id:"进一步阅读-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进一步阅读-2"}},[e._v("#")]),e._v(" 进一步阅读")]),e._v(" "),n("ul",[n("li",[e._v("Webpack "),n("a",{attrs:{href:"https://webpack.js.org/guides/caching/",target:"_blank",rel:"noopener noreferrer"}},[e._v("长期缓存"),n("OutboundLink")],1),e._v("指南")]),e._v(" "),n("li",[e._v("Webpack "),n("a",{attrs:{href:"https://webpack.js.org/concepts/manifest/",target:"_blank",rel:"noopener noreferrer"}},[e._v("有关 Webpack 运行时和清单的"),n("OutboundLink")],1),e._v("文档")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://medium.com/webpack/webpack-bits-getting-the-most-out-of-the-commonschunkplugin-ab389e5f318",target:"_blank",rel:"noopener noreferrer"}},[e._v("“充分利用 CommonsChunkPlugin”"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何"),n("code",[e._v("optimization.splitChunks")]),e._v("与"),n("code",[e._v("optimization.runtimeChunk")]),e._v("工作"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"内联-webpack-运行时以保存额外的-http-请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内联-webpack-运行时以保存额外的-http-请求"}},[e._v("#")]),e._v(" 内联 webpack 运行时以保存额外的 HTTP 请求")]),e._v(" "),n("p",[e._v("为了使事情变得更好，请尝试将 webpack 运行时内联到 HTML 响应中。即，代替此：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\x3c!-- index.html --\x3e\n<script src="./runtime.79f17c27b335abc7aaf4.js"><\/script>\n')])])]),n("p",[e._v("做这个：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("\x3c!-- index.html --\x3e\n<script>\n!function(e){function n(r){if(t[r])return t[r].exports;…}} ([]);\n<\/script>\n")])])]),n("p",[e._v("运行时很小，并且内联它可以帮助您保存 HTTP 请求（对于 HTTP / 1 非常重要；对于 HTTP / 2 不太重要，但可能仍会起作用）。")]),e._v(" "),n("p",[e._v("这是操作方法。")]),e._v(" "),n("h3",{attrs:{id:"如果使用-htmlwebpackplugin-生成-html"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如果使用-htmlwebpackplugin-生成-html"}},[e._v("#")]),e._v(" 如果使用 HtmlWebpackPlugin 生成 HTML")]),e._v(" "),n("p",[e._v("如果使用 "),n("a",{attrs:{href:"https://github.com/jantimon/html-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("HtmlWebpackPlugin"),n("OutboundLink")],1),e._v("生成 HTML 文件， "),n("a",{attrs:{href:"https://github.com/DustinJackson/html-webpack-inline-source-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("则只"),n("OutboundLink")],1),e._v(" 需要"),n("a",{attrs:{href:"https://github.com/DustinJackson/html-webpack-inline-source-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("InlineSourcePlugin"),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst InlineSourcePlugin = require('html-webpack-inline-source-plugin');\n\nmodule.exports = {\n  plugins: [\n    new HtmlWebpackPlugin({\n      // Inline all files which names start with “runtime~” and end with “.js”.\n      // That’s the default naming of runtime chunks\n      inlineSource: 'runtime~.+\\\\.js',\n    }),\n    // This plugin enables the “inlineSource” option\n    new InlineSourcePlugin(),\n  ],\n};\n")])])]),n("h3",{attrs:{id:"如果使用自定义服务器逻辑生成-html"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如果使用自定义服务器逻辑生成-html"}},[e._v("#")]),e._v(" 如果使用自定义服务器逻辑生成 HTML")]),e._v(" "),n("p",[n("strong",[e._v("使用 webpack 4：")])]),e._v(" "),n("ol",[n("li",[n("p",[e._v("添加")]),e._v(" "),n("p",[n("code",[e._v("WebpackManifestPlugin")])]),e._v(" "),n("p",[e._v("即可知道运行时块的生成名称：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js（适用于webpack 4）\nconst ManifestPlugin = require （'webpack-manifest-plugin' ）;\n\n模块。出口= {\n  插件：[\n    新的ManifestPlugin （），\n  ]，\n};\n")])])]),n("p",[e._v("使用此插件进行构建将创建一个如下所示的文件：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// manifest.json\n{\n  “ 运行时〜主。JS “：” 运行时〜主。8e0d62a03.js ”\n}\n")])])])]),e._v(" "),n("li",[n("p",[e._v("以方便的方式内联运行时块的内容。例如，使用 Node.js 和 Express：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// server.js\nconst fs = require （'fs' ）;\nconst manifest = require （'./manifest.json' ）;\n\nconst runtimeContent = fs 。readFileSync （manifest [ 'runtime〜main.js' ]，'utf-8' ）;\n\n应用程式。get （'/' ，（req ，res ）=> {\n  水库。发送（`\n    …\n    <script> $ {runtimeContent} </ script>\n    …\n  ` ）;\n}）;\n")])])])])]),e._v(" "),n("p",[n("strong",[e._v("或使用 webpack 3：")])]),e._v(" "),n("ol",[n("li",[n("p",[e._v("通过指定")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("filename\n")])])]),n("p",[e._v("以下内容使运行时名称为静态：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js（适用于webpack 3）\n模块。出口= {\n  插件：[\n    新的webpack 。优化。CommonsChunkPlugin （{\n      名称：“运行时”，\n      minChunks ：Infinity ，\n      文件名：“ runtime 。js ”，\n        //→现在将调用运行时文件\n        //“ runtime.js”，而不是“ runtime.79f17c27b335abc7aaf4.js”\n    }），\n  ]，\n};\n")])])])]),e._v(" "),n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("runtime.js\n")])])]),n("p",[e._v("以方便的方式 内联内容。例如，使用 Node.js 和 Express：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// server.js\nconst fs = require （“ fs” ）；\nconst runtimeContent = fs 。readFileSync （'./ runtime.js' ，'utf-8' ）;\n\n应用程式。得到（'/' ，（req ，res ）=> {\n  水库。发送（`\n    …\n    <script> $ {runtimeContent} </ script>\n    …\n  ` ）;\n}）；\n")])])]),n("h2",{attrs:{id:"现在不需要的延迟加载代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#现在不需要的延迟加载代码"}},[e._v("#")]),e._v(" 现在不需要的延迟加载代码")]),e._v(" "),n("p",[e._v("有时，页面包含或多或少的重要部分：")]),e._v(" "),n("ul",[n("li",[e._v("如果您在 YouTube 上加载视频页面，则您更关心视频而不是评论。在这里，视频比评论更重要。")]),e._v(" "),n("li",[e._v("如果您在新闻网站上打开文章，则您更关心文章的文字而不是广告。在这里，文字比广告更重要。")])]),e._v(" "),n("p",[e._v("在这种情况下，请先仅下载最重要的内容，然后再延迟加载其余部分，以提高初始加载性能。使用"),n("a",{attrs:{href:"https://webpack.js.org/api/module-methods/#import-",target:"_blank",rel:"noopener noreferrer"}},[e._v("的 "),n("code",[e._v("import()")]),e._v("功能"),n("OutboundLink")],1),e._v("和 "),n("a",{attrs:{href:"https://webpack.js.org/guides/code-splitting/",target:"_blank",rel:"noopener noreferrer"}},[e._v("代码分割"),n("OutboundLink")],1),e._v("为这样的：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// videoPlayer.js\nexport function renderVideoPlayer() { … }\n\n// comments.js\nexport function renderComments() { … }\n\n// index.js\nimport {renderVideoPlayer} from './videoPlayer';\nrenderVideoPlayer();\n\n// …Custom event listener\nonShowCommentsClick(() => {\n  import('./comments').then((comments) => {\n    comments.renderComments();\n  });\n});\n")])])]),n("p",[n("code",[e._v("import()")]),e._v("指定要动态加载特定模块。当 webpack 看到时"),n("code",[e._v("import('./module.js')")]),e._v("，它将把该模块移动到单独的块中：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ webpack\n哈希：39b2a53cb4e73f0dc5b2\n版本：webpack 3.8 。1个\n时间：4273ms\n                            资产规模块名称\n      ./ 0.8ecaf182f5c85b7a8199.js 22.5 kB 0 [已发射]\n   ./ main 。f7e53d8e13e9a2745d6d 。js 60 kB 1 [ 发出] 主要\n ./ 供应商。4f14b6326a80f4752a98.js 46 kB 2 [ 发出]供应商\n./ 运行时。79f17c27b335abc7aaf4.js 1.45 kB 3 [发射]运行时\n")])])]),n("p",[e._v("并仅在执行到达"),n("code",[e._v("import()")]),e._v("功能时下载。")]),e._v(" "),n("p",[e._v("这将使"),n("code",[e._v("main")]),e._v("捆束更小，从而缩短了初始装载时间。更重要的是，它将改善缓存–如果您更改主块中的代码，则注释块不会受到影响。")]),e._v(" "),n("p",[e._v("**注意：**如果您使用 Babel 编译此代码，则会出现语法错误，因为 Babel 无法立即使用"),n("code",[e._v("import()")]),e._v("。为避免该错误，请添加 "),n("a",{attrs:{href:"https://www.npmjs.com/package/babel-plugin-syntax-dynamic-import",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("syntax-dynamic-import")]),n("OutboundLink")],1),e._v(" 插件。")]),e._v(" "),n("h3",{attrs:{id:"进一步阅读-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进一步阅读-3"}},[e._v("#")]),e._v(" 进一步阅读")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://webpack.js.org/api/module-methods/#import-",target:"_blank",rel:"noopener noreferrer"}},[e._v("该"),n("OutboundLink")],1),n("a",{attrs:{href:"https://webpack.js.org/api/module-methods/#import-",target:"_blank",rel:"noopener noreferrer"}},[e._v(" 功能的"),n("OutboundLink")],1),e._v(" Webpack 文档"),n("a",{attrs:{href:"https://webpack.js.org/api/module-methods/#import-",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("import()")]),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import",target:"_blank",rel:"noopener noreferrer"}},[e._v("用于实现"),n("OutboundLink")],1),n("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import",target:"_blank",rel:"noopener noreferrer"}},[e._v(" 语法"),n("OutboundLink")],1),e._v("的 JavaScript 建议"),n("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("import()")]),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"将代码分为路线和页面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#将代码分为路线和页面"}},[e._v("#")]),e._v(" 将代码分为路线和页面")]),e._v(" "),n("p",[e._v("如果您的应用程序具有多个路由或页面，但是只有一个带有代码的 JS 文件（单个代码"),n("code",[e._v("main")]),e._v("块），则很可能在每个请求中提供了额外的字节。例如，当用户访问您网站的主页时：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/webpack/site-home-page.png",alt:"WebFundamentals主页"}})]),e._v(" "),n("p",[e._v("他们不需要加载用于渲染位于不同页面上的文章的代码，但是他们会加载它。此外，如果用户始终只访问主页，而您在文章代码上进行了更改，则 webpack 将使整个捆绑软件无效-用户将不得不重新下载整个应用程序。")]),e._v(" "),n("p",[e._v("如果我们将应用分为页面（或路由，如果是单页应用），则用户将仅下载相关代码。另外，浏览器将更好地缓存应用程序代码：如果更改主页代码，则 webpack 将仅使相应的块无效。")]),e._v(" "),n("h3",{attrs:{id:"对于单页应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对于单页应用"}},[e._v("#")]),e._v(" 对于单页应用")]),e._v(" "),n("p",[e._v("要按路线划分单页应用，请使用"),n("code",[e._v("import()")]),e._v("（请参阅"),n("a",{attrs:{href:"https://developers.google.cn/web/fundamentals/performance/webpack/use-long-term-caching#lazy-loading",target:"_blank",rel:"noopener noreferrer"}},[e._v("“您现在不需要的延迟加载代码”"),n("OutboundLink")],1),e._v("部分）。如果您使用框架，则它可能已有解决方案：")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://reacttraining.com/react-router/web/guides/code-splitting",target:"_blank",rel:"noopener noreferrer"}},[e._v("“代码分裂”"),n("OutboundLink")],1),e._v(" 中"),n("code",[e._v("react-router")]),e._v("的文件（包括反应）")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://router.vuejs.org/en/advanced/lazy-loading.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("“延迟加载路线”"),n("OutboundLink")],1),e._v("中 "),n("code",[e._v("vue-router")]),e._v("的文档（对于 Vue.js）")])]),e._v(" "),n("h3",{attrs:{id:"对于传统的多页应用程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对于传统的多页应用程序"}},[e._v("#")]),e._v(" 对于传统的多页应用程序")]),e._v(" "),n("p",[e._v("要按页面拆分传统应用，请使用 webpack 的"),n("a",{attrs:{href:"https://webpack.js.org/concepts/entry-points/",target:"_blank",rel:"noopener noreferrer"}},[e._v("入口点"),n("OutboundLink")],1),e._v("。如果您的应用程序具有三种页面：主页，文章页面和用户帐户页面，则它应具有三个条目：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js\nmodule.exports = {\n  entry: {\n    home: './src/Home/index.js',\n    article: './src/Article/index.js',\n    profile: './src/Profile/index.js'\n  },\n};\n")])])]),n("p",[e._v("对于每个条目文件，webpack 将构建一个单独的依赖关系树并生成一个包，其中仅包含该条目使用的模块：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ webpack\n哈希：318d7b8490a7382bf23b\n版本：webpack 3.8 。1个\n时间：4273ms\n                            资产规模大块大块的名称\n      ./ 0.8ecaf182f5c85b7a8199.js 22.5 kB        0 [ 发出]\n   ./ home 。91b9ed27366fe7e33d6a 。js     18 kB        1 [ 发出]   主页\n./ 文章。87a128755b16ac3294fd 。js     32 kB        2 [ 发出]   文章\n./ profile 。de945dc02685f6166781 。js     24 kB        3 [ 发出]   配置文件\n ./ 供应商。4f14b6326a80f4752a98.js 46 kB        4 [ 发出]   供应商\n./ 运行时。318d7b8490a7382bf23b 。js   1.45 kB        5 [ 发出]   运行时\n")])])]),n("p",[e._v("因此，如果仅文章页面使用 Lodash，则"),n("code",[e._v("home")]),e._v("和"),n("code",[e._v("profile")]),e._v("捆绑包中将不包含它-并且用户在访问主页时不必下载此库。")]),e._v(" "),n("p",[e._v("但是，独立的依赖关系树有其缺点。如果两个入口点都使用 Lodash，并且您尚未将依赖项移至供应商捆绑包中，则两个入口点都将包含 Lodash 副本。为了解决这个问题，**在 webpack 4 中，**将该"),n("code",[e._v("optimization.splitChunks.chunks: 'all'")]),e._v("选项添加 到您的 webpack 配置中：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js（适用于webpack 4）\n模块。出口= {\n  优化：{\n    splitChunks ：{\n      块：'全部' ，\n    }\n  }，\n};\n")])])]),n("p",[e._v("此选项启用智能代码拆分。使用此选项，webpack 会自动查找通用代码并将其提取到单独的文件中。")]),e._v(" "),n("p",[e._v("或者，**在 webpack 3 中，**使用"),n("a",{attrs:{href:"https://webpack.js.org/plugins/commons-chunk-plugin/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("CommonsChunkPlugin")]),n("OutboundLink")],1),e._v(" –将公共依赖项移动到新的指定文件中：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js (for webpack 3)\nmodule.exports = {\n  plugins: [\n    new webpack.optimize.CommonsChunkPlugin({\n      // A name of the chunk that will include the common dependencies\n      name: 'common',\n\n      // The plugin will move a module into a common file\n      // only if it’s included into `minChunks` chunks\n      // (Note that the plugin analyzes all chunks, not only entries)\n      minChunks: 2,    // 2 is the default value\n    }),\n  ],\n};\n")])])]),n("p",[e._v("随意发挥"),n("code",[e._v("minChunks")]),e._v("价值，找到最好的之一。通常，您希望保持较小，但如果块数量增加，则增加。例如，对于 3 个块，"),n("code",[e._v("minChunks")]),e._v("可能为 2，但对于 30 个块，可能为 8 –因为如果将其保持为 2，则太多模块将进入通用文件，从而使其膨胀过多。")]),e._v(" "),n("h3",{attrs:{id:"进一步阅读-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进一步阅读-4"}},[e._v("#")]),e._v(" 进一步阅读")]),e._v(" "),n("ul",[n("li",[e._v("Webpack "),n("a",{attrs:{href:"https://webpack.js.org/concepts/entry-points/",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于入口点概念的"),n("OutboundLink")],1),e._v("文档")]),e._v(" "),n("li",[e._v("Webpack "),n("a",{attrs:{href:"https://webpack.js.org/plugins/commons-chunk-plugin/",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于"),n("OutboundLink")],1),e._v(" CommonsChunkPlugin 的文档")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://medium.com/webpack/webpack-bits-getting-the-most-out-of-the-commonschunkplugin-ab389e5f318",target:"_blank",rel:"noopener noreferrer"}},[e._v("“充分利用 CommonsChunkPlugin”"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何"),n("code",[e._v("optimization.splitChunks")]),e._v("与"),n("code",[e._v("optimization.runtimeChunk")]),e._v("工作"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"使模块-id-更稳定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使模块-id-更稳定"}},[e._v("#")]),e._v(" 使模块 ID 更稳定")]),e._v(" "),n("p",[e._v("构建代码时，webpack 为每个模块分配一个 ID。以后，这些 ID "),n("code",[e._v("require()")]),e._v("在包内的中使用。您通常会在模块路径之前的生成输出中看到 ID：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ webpack\n哈希：df3474e4f76528e3bbc9\n版本：webpack 3.8 。1个\n时间：2150ms\n                           资产规模块名称\n      ./ 0.8ecaf182f5c85b7a8199.js 22.5 kB 0 [已发射]\n   ./ main 。4e50a16675574df6a9e9 。js 60 kB 1 [ 发出] 主要\n ./ 供应商。26886caf15818fa82dfa 。js 46 kB 2 [发射]供应商\n./ 运行时。79f17c27b335abc7aaf4.js 1.45 kB 3 [发射]运行时\n")])])]),n("p",[e._v("​ ↓ 这里")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("   [ 0 ] ./ 索引。js 29 kB { 1 } [内置]\n   [ 2 ]（webpack ）/ buildin / 全局。js 488 字节{ 2 } [内置]\n   [ 3 ]（webpack ）/ buildin / 模块。js 495 字节{ 2 } [内置]\n   [ 4 ] ./ 评论。js 58 kB { 0 } [内置]\n   [ 5 ] ./ ads 。js 74 kB { 1 } [内置]\n    + 1 个隐藏模块\n")])])]),n("p",[e._v("默认情况下，使用计数器来计算 ID（即第一个模块的 ID 为 0，第二个模块的 ID 为 1，依此类推）。问题在于，当您添加新模块时，它可能会出现在模块列表的中间，从而更改所有下一个模块的 ID：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ webpack\n哈希：df3474e4f76528e3bbc9\n版本：webpack 3.8 。1个\n时间：2150ms\n                           资产规模大块大块的名称\n      ./ 0.5c82c0f337fcb22672b5.js 22 kB        0 [ 发出]\n   ./ main 。0c8b617dfc40c2827ae3.js 82 kB        1 [ 发出]   主\n ./ 供应商。26886caf15818fa82dfa 。js     46 kB        2 [ 发出]   供应商\n./ 运行时。79f17c27b335abc7aaf4.js 1.45 kB        3 [ 发出]   运行时\n   [ 0 ] ./ 索引。js 29 kB { 1 } [ 内置]\n   [ 2 ] （webpack ）/ buildin / global 。js 488 字节{ 2 } [ 内置]\n   [ 3 ] （webpack ）/ buildin / 模块。js 495 字节{ 2 } [ 内置]\n")])])]),n("p",[e._v("​ ↓ 我们添加了一个新模块...")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("   [ 4 ] ./ webPlayer 。js 24 kB { 1 } [ 内置]\n")])])]),n("p",[e._v("​ ↓ 看看它做了什么！"),n("code",[e._v("comments.js")]),e._v("现在具有 ID 5 而不是 4")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("   [ 5 ] ./ 评论。js 58 kB { 0 } [内置]\n")])])]),n("p",[e._v("​ ↓ "),n("code",[e._v("ads.js")]),e._v("现在具有 ID 6，而不是 5")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("   [ 6 ] ./ ads 。js 74 kB { 1 } [内置]\n       + 1 个隐藏模块\n")])])]),n("p",[e._v("这会使所有包含或依赖于具有更改 ID 的模块的块无效-即使它们的实际代码没有更改。在我们的例子中，"),n("code",[e._v("0")]),e._v("大块（带有的块"),n("code",[e._v("comments.js")]),e._v("）和"),n("code",[e._v("main")]),e._v("大块（带有其他应用程序代码的块）无效-而只有那个"),n("code",[e._v("main")]),e._v("应该是无效的。")]),e._v(" "),n("p",[e._v("要解决此问题，请更改使用来计算模块 ID 的方式 "),n("a",{attrs:{href:"https://webpack.js.org/plugins/hashed-module-ids-plugin/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("HashedModuleIdsPlugin")]),n("OutboundLink")],1),e._v("。它将基于计数器的 ID 替换为模块路径的哈希值：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ webpack\n哈希：df3474e4f76528e3bbc9\n版本：webpack 3.8 。1个\n时间：2150ms\n                           资产规模大块大块的名称\n      ./ 0.6168aaac8461862eab7a 。js   22.5 kB        0 [ 发出]\n   ./ main 。a2e49a279552980e3b91 。js     60 kB        1 [ 发出]   主\n ./ 供应商。ff9f7ea865884e6a84c8 。js     46 kB        2 [ 发出]   供应商\n./ 运行时。25f5d0204e4f77fa57a1.js 1.45 kB        3 [ 发出]   运行时\n")])])]),n("p",[e._v("↓ 这里")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[ 3IRH ] ./ index 。js 29 kB { 1 } [内置]\n[ DuR2 ]（webpack ）/ buildin / 全局。js 488 字节{ 2 } [内置]\n[ JkW7 ]（webpack ）/ buildin / 模块。js 495 字节{ 2 } [内置]\n[ LbCc ] ./ webPlayer 。js 24 kB { 1 } [内置]\n[ lebJ ] ./ 评论。js 58 kB { 0 } [内置]\n[ 02Tr ] ./ ads 。js 74 kB { 1 } [内置]\n    + 1 个隐藏模块\n")])])]),n("p",[e._v("使用这种方法，仅当您重命名或移动该模块时，模块的 ID 才会更改。新模块不会影响其他模块的 ID。")]),e._v(" "),n("p",[e._v("要启用该插件，请将其添加到"),n("code",[e._v("plugins")]),e._v("配置部分：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// webpack.config.js\nmodule.exports = {\n  plugins: [\n    new webpack.HashedModuleIdsPlugin(),\n  ],\n};\n")])])]),n("h3",{attrs:{id:"进一步阅读-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进一步阅读-5"}},[e._v("#")]),e._v(" 进一步阅读")]),e._v(" "),n("ul",[n("li",[e._v("Webpack "),n("a",{attrs:{href:"https://webpack.js.org/plugins/hashed-module-ids-plugin/",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于"),n("OutboundLink")],1),e._v(" HashedModuleIdsPlugin 的文档")])]),e._v(" "),n("h2",{attrs:{id:"加起来"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加起来"}},[e._v("#")]),e._v(" 加起来")]),e._v(" "),n("ul",[n("li",[e._v("缓存包并通过更改包名称来区分版本")]),e._v(" "),n("li",[e._v("将捆绑包分为应用程序代码，供应商代码和运行时")]),e._v(" "),n("li",[e._v("内联运行时以保存 HTTP 请求")]),e._v(" "),n("li",[e._v("延迟加载非关键代码 "),n("code",[e._v("import")])]),e._v(" "),n("li",[e._v("按路线/页面划分代码，以避免加载不必要的内容")])])])}),[],!1,null,null,null);a.default=s.exports}}]);