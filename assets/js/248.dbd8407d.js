(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{655:function(e,r,t){"use strict";t.r(r);var a=t(16),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"渲染性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#渲染性能"}},[e._v("#")]),e._v(" 渲染性能")]),e._v(" "),t("p",[e._v("现在的网络用户"),t("a",{attrs:{href:"https://paul.kinlan.me/what-news-readers-want/",target:"_blank",rel:"noopener noreferrer"}},[e._v("希望他们访问的页面具有交互性并且运行顺畅"),t("OutboundLink")],1),e._v("，这正是您需要投入越来越多时间和精力的地方。页面不仅要快速加载，而且要顺畅地运行；滚动应与手指的滑动一样快，并且动画和交互应如丝绸般顺滑。")]),e._v(" "),t("p",[e._v("要编写高性能的网站和应用，您需要了解浏览器如何处理 HTML、JavaScript 和 CSS，并确保您编写的代码（和您要包括的其他第三方代码）尽可能高效地运行。")]),e._v(" "),t("h2",{attrs:{id:"_60fps-与设备刷新率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_60fps-与设备刷新率"}},[e._v("#")]),e._v(" 60fps 与设备刷新率")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/rendering/images/intro/response.jpg",alt:"用户与网站进行交互。"}})]),e._v(" "),t("p",[e._v("目前大多数设备的屏幕刷新率为 "),t("strong",[e._v("60 次/秒")]),e._v("。因此，如果在页面中有一个动画或渐变效果，或者用户正在滚动页面，那么浏览器渲染动画或页面的每一帧的速率也需要跟设备屏幕的刷新率保持一致。")]),e._v(" "),t("p",[e._v("其中每个帧的预算时间仅比 16 毫秒多一点 (1 秒/ 60 = 16.66 毫秒)。但实际上，浏览器有整理工作要做，因此您的所有工作需要在 "),t("strong",[e._v("10 毫秒")]),e._v("内完成。如果无法符合此预算，帧率将下降，并且内容会在屏幕上抖动。 此现象通常称为"),t("strong",[e._v("卡顿")]),e._v("，会对用户体验产生负面影响。")]),e._v(" "),t("h2",{attrs:{id:"像素管道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#像素管道"}},[e._v("#")]),e._v(" 像素管道")]),e._v(" "),t("p",[e._v("您在工作时需要了解并注意五个主要区域。 这些是您拥有最大控制权的部分，也是像素至屏幕管道中的关键点：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/rendering/images/intro/frame-full.jpg",alt:"完整的像素管道"}})]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("JavaScript")]),e._v("。一般来说，我们会使用 JavaScript 来实现一些视觉变化的效果。比如用 jQuery 的 "),t("code",[e._v("animate")]),e._v(" 函数做一个动画、对一个数据集进行排序或者往页面里添加一些 DOM 元素等。当然，除了 JavaScript，还有其他一些常用方法也可以实现视觉变化效果，比如：CSS Animations、Transitions 和 Web Animation API。")]),e._v(" "),t("li",[t("strong",[e._v("样式计算")]),e._v("。此过程是根据匹配选择器（例如 "),t("code",[e._v(".headline")]),e._v(" 或 "),t("code",[e._v(".nav > .nav__item")]),e._v("）计算出哪些元素应用哪些 CSS 规则的过程。从中知道规则之后，将应用规则并计算每个元素的最终样式。")]),e._v(" "),t("li",[t("strong",[e._v("布局")]),e._v("。在知道对一个元素应用哪些规则之后，浏览器即可开始计算它要占据的空间大小及其在屏幕的位置。网页的布局模式意味着一个元素可能影响其他元素，例如 `` 元素的宽度一般会影响其子元素的宽度以及树中各处的节点，因此对于浏览器来说，布局过程是经常发生的。")]),e._v(" "),t("li",[t("strong",[e._v("绘制")]),e._v("。绘制是填充像素的过程。它涉及绘出文本、颜色、图像、边框和阴影，基本上包括元素的每个可视部分。绘制一般是在多个表面（通常称为层）上完成的。")]),e._v(" "),t("li",[t("strong",[e._v("合成")]),e._v("。由于页面的各部分可能被绘制到多层，由此它们需要按正确顺序绘制到屏幕上，以便正确渲染页面。对于与另一元素重叠的元素来说，这点特别重要，因为一个错误可能使一个元素错误地出现在另一个元素的上层。")])]),e._v(" "),t("p",[e._v("管道的每个部分都有机会产生卡顿，因此务必准确了解您的代码触发管道的哪些部分。")]),e._v(" "),t("p",[e._v("有时您可能听到与绘制一起使用的术语“栅格化”。这是因为绘制实际上分为两个任务： 1) 创建绘图调用的列表，以及 2) 填充像素。")]),e._v(" "),t("p",[e._v("后者称为“栅格化”，因此每当您在 DevTools 中看到绘制记录时，就应当将其视为包括栅格化。 （在某些架构下，绘图调用的列表创建以及栅格化是在不同的线程中完成，但是这不是开发者所能控制的。）")]),e._v(" "),t("p",[e._v("不一定每帧都总是会经过管道每个部分的处理。实际上，不管是使用 JavaScript、CSS 还是网络动画，在实现视觉变化时，管道针对指定帧的运行通常有三种方式：")]),e._v(" "),t("h3",{attrs:{id:"_1-js-css-样式-布局-绘制-合成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-js-css-样式-布局-绘制-合成"}},[e._v("#")]),e._v(" 1. JS / CSS > 样式 > 布局 > 绘制 > 合成")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/rendering/images/intro/frame-full.jpg",alt:"完整的像素管道"}})]),e._v(" "),t("p",[e._v("如果您修改元素的“layout”属性，也就是改变了元素的几何属性（例如宽度、高度、左侧或顶部位置等），那么浏览器将必须检查所有其他元素，然后“自动重排”页面。任何受影响的部分都需要重新绘制，而且最终绘制的元素需进行合成。")]),e._v(" "),t("h3",{attrs:{id:"_2-js-css-样式-绘制-合成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-js-css-样式-绘制-合成"}},[e._v("#")]),e._v(" 2. JS / CSS > 样式 > 绘制 > 合成")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/rendering/images/intro/frame-no-layout.jpg",alt:"无布局的像素管道。"}})]),e._v(" "),t("p",[e._v("如果您修改“paint only”属性（例如背景图片、文字颜色或阴影等），即不会影响页面布局的属性，则浏览器会跳过布局，但仍将执行绘制。")]),e._v(" "),t("h3",{attrs:{id:"_3-js-css-样式-合成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-js-css-样式-合成"}},[e._v("#")]),e._v(" 3. JS / CSS > 样式 > 合成")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://developers.google.cn/web/fundamentals/performance/rendering/images/intro/frame-no-layout-paint.jpg",alt:"无布局或绘制的像素管道。"}})]),e._v(" "),t("p",[e._v("如果您更改一个既不要布局也不要绘制的属性，则浏览器将跳到只执行合成。")]),e._v(" "),t("p",[e._v("这个最后的版本开销最小，最适合于应用生命周期中的高压力点，例如动画或滚动。")]),e._v(" "),t("p",[t("strong",[e._v("Note:")]),e._v(" 如果想知道更改任何指定 CSS 属性将触发上述三个版本中的哪一个，请查看 "),t("a",{attrs:{href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSS 触发器"),t("OutboundLink")],1),e._v("。如果要快速了解高性能动画，请阅读"),t("a",{attrs:{href:"https://developers.google.cn/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count",target:"_blank",rel:"noopener noreferrer"}},[e._v("更改仅合成器的属性"),t("OutboundLink")],1),e._v("部分。")]),e._v(" "),t("p",[e._v("性能是一种避免执行工作的艺术，并且使您执行的任何操作尽可能高效。 许多情况下，这需要与浏览器配合，而不是跟它对着干。 值得谨记的是，上面列出的各项管道工作在计算开销上有所不同；一些任务比其他任务的开销要大！")]),e._v(" "),t("p",[e._v("接下来，让我们深入了解此管道的各个不同部分。我们会以一些常见问题为例，阐述如何诊断和修正它们。")]),e._v(" "),t("h2",{attrs:{id:"浏览器渲染优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染优化"}},[e._v("#")]),e._v(" 浏览器渲染优化")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.udacity.com/course/browser-rendering-optimization--ud860",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://developers.google.cn/web/shows/udacity/img/ud860.jpg",alt:"img"}}),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("想深入了解渲染性能吗？快看看这堂课程吧 它能帮助你了解浏览器是如何把 HTML/CSS/JavaScript 代码转换成屏幕上你看到的一个个像素的 如何使用 DevTools 来测量页面性能、以及如何优化你的页面渲染速度。")]),e._v(" "),t("p",[e._v("This is a free course offered through "),t("a",{attrs:{href:"https://www.udacity.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Udacity"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.udacity.com/course/browser-rendering-optimization--ud860",target:"_blank",rel:"noopener noreferrer"}},[e._v("Take Course"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);