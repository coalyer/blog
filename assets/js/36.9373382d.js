(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{807:function(t,S,c){"use strict";c.r(S);var e=c(16),s=Object(e.a)({},(function(){var t=this,S=t.$createElement,c=t._self._c||S;return c("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[c("p",[c("a",{attrs:{href:"https://www.w3cschool.cn/css/css-hack.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("你想知道的 css hack 知识全都帮你整理好了"),c("OutboundLink")],1)]),t._v(" "),c("p",[t._v("写 CSS 样式的时候，恐怕最头疼的就是各个浏览器下的兼容性问题，即 CSS hack，不同的浏览器对 CSS 的解析结果是不同的，因此会导致相同的 CSS 输出的页面效果不同，这就需要 CSS hack 来解决浏览器局部的兼容性问题。使用 CSS 、 hack 将会使用你的 CSS 代码部分失去作用，然后借助条件样式，使用其原 CSS 代码在一些浏览器解析，而 CSS hack 代码在符合条件要求的浏览器中替代原 CSS 那部分代码。")]),t._v(" "),c("p",[t._v("CSS hack 除了可以处理与浏览器不兼容的 CSS 代码，也能够让我们通过 CSS hack 给不同版本的浏览器定制编写不同的 CSS 效果。")]),t._v(" "),c("p",[t._v("css hack 基本概念")])])}),[],!1,null,null,null);S.default=s.exports}}]);