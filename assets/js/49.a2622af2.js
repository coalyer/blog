(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{612:function(t,s,a){"use strict";a.r(s);var n=a(16),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"初探-css-对象模型-cssom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初探-css-对象模型-cssom"}},[t._v("#")]),t._v(" 初探 CSS 对象模型（CSSOM）")]),t._v(" "),a("p",[t._v("https://www.w3cplus.com/javascript/cssom-css-typed-om.html")]),t._v(" "),a("p",[t._v("可以通过一些 JavaScript 的 API 操作和处理 Web 页面上的 HTML 元素。在 Web 中除了 DOM 之外还有另外一个对象模型： "),a("strong",[t._v("CSS 对象模型（即 CSSOM）")]),t._v(" 。")]),t._v(" "),a("p",[t._v("或许你已经在项目中已经用过了，只不过没有意识到这一点而以。今天这篇文章中，我们主要来一起探讨有关于 CSSOM 相关的特性。")]),t._v(" "),a("h2",{attrs:{id:"cssom-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cssom-是什么"}},[t._v("#")]),t._v(" CSSOM 是什么？")]),t._v(" "),a("p",[t._v("既然我们要探讨 CSSOM 是什么？那就很有必要先了解它是一个什么东东？ "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/CSS_Object_Model",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 上对 CSSOM 的描述"),a("OutboundLink")],1),t._v(" 是这样的：")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("CSS Object Model")]),t._v(" 是一组允许用 JavaScript 操纵 CSS 的 API。 它是继 DOM 和 HTML API 之后，又一个操纵 CSS 的接口，从而能够动态地读取和修改 CSS 样式。")])]),t._v(" "),a("p",[t._v("非常类似于 DOM，但是用于 CSS 而不是 HTML。它允许用户动态读取和修改 CSS 样式。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.w3.org/TR/cssom-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSSOM 在 W3C 规范中有一个独立的模块"),a("OutboundLink")],1),t._v(" ，对于我们学习 CSSOM 还是很有帮助的，但相较于 MDN 而来，更难于阅读和理解。")]),t._v(" "),a("p",[t._v("为了更好的理解 CSSOM 是什么？我来们先来看一个简单的示例。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),a("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width,initial-scale=1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("style.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Critical Path"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("web performance"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" students!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("awesome-photo.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*style.css*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 16px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("vuepress-run",t._b({attrs:{code:"%3Ctemplate%3E%0A%20%20%3Cdiv%3E%0A%20%20%20%20%3Cp%3EHello%20%3Cspan%3Eweb%20performance%3C%2Fspan%3E%20students!%3C%2Fp%3E%0A%20%20%20%20%3Cdiv%3E%3Cimg%20src%3D%22%2Fbasic%2Fcss%2Falign.jpg%22%20%2F%3E%3C%2Fdiv%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Ftemplate%3E%0A%3Cstyle%3E%0A%20%20body%20%7B%0A%20%20%20%20font-size%3A%2016px%3B%0A%20%20%7D%0A%20%20p%20%7B%0A%20%20%20%20font-weight%3A%20bold%3B%0A%20%20%7D%0A%20%20span%20%7B%0A%20%20%20%20color%3A%20red%3B%0A%20%20%7D%0A%20%20p%20span%20%7B%0A%20%20%20%20display%3A%20none%3B%0A%20%20%7D%0A%20%20img%20%7B%0A%20%20%20%20float%3A%20right%3B%0A%20%20%7D%0A%3C%2Fstyle%3E%0A"}},"vuepress-run",{themeColor:"red",themeBorderColor:"#eaecef",jsLabs:["https://unpkg.com/element-ui/lib/index.js","https://unpkg.com/babel-polyfill@6.26.0/dist/polyfill.min.js"],cssLabs:["https://unpkg.com/element-ui/lib/theme-chalk/index.css"],title:"理解 CSSOM",row:!0,reverse:!0},!1),[a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("web performance"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" students!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/basic/css/align.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 16px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("p",[t._v("这是一个非常简单的 Web 页面，“包含了一些文本和一幅图片”。浏览器处理这个页面的过程如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/DOM%E6%A0%91%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B.png",alt:"img"}})]),t._v(" "),a("p",[t._v("根据前面所学，其对应的 DOM 结构建如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/DOM%E6%A0%91.png",alt:"img"}})]),t._v(" "),a("p",[t._v("对于 Web 的样式，其处理 HTML 有点类似，"),a("strong",[t._v("需要将收到的 CSS 规则转换成某种浏览器能够理解和处理的东西")]),t._v(" 。因此，我们会重复 HTML 过程，只不过是为 CSS 而不是 HTML:")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/CSSOM%E8%A7%84%E5%88%99%E6%A0%91%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B.png",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("CSS 字节转换成字符，接着转换成令牌和节点，最后链接到一个 CSSOM 的树结构中：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/CSSOM%E8%A7%84%E5%88%99%E6%A0%91.png",alt:"img"}})]),t._v(" "),a("p",[t._v("是不是看上去和 DOM 结构树类似呀。那么 CSSOM 为何具有树结构呢？"),a("strong",[t._v("为页面上的任何对象计算最后一组样式时，浏览器都会先从适用于该节点的最通用规则开始")]),t._v("，比如，如果该节点是 "),a("code",[t._v("body")]),t._v(" 元素的子元素，则应用所有 "),a("code",[t._v("body")]),t._v(" 样式，然后通过应用更具体的规则（这里将会运用 "),a("a",{attrs:{href:"/basic/css/%E5%B1%82%E5%8F%A0%E5%92%8C%E7%BB%A7%E6%89%BF"}},[t._v("CSS 层级相关的管理规则")]),t._v(" ）以递归方式优化计算的样式。")]),t._v(" "),a("p",[t._v("上面的示例就很形象的介绍了 CSSOM。")]),t._v(" "),a("p",[t._v("注意，上图显示的树并非是一颗完整的 CSSOM 树，它只显示了我们决定在样式表中替换的样式。")]),t._v(" "),a("p",[t._v("事实上这一过程是相当复杂的过程，在这里不做过多的介绍，如果你感兴趣的话，可以阅读下面两篇文章：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://coolshell.cn/articles/9666.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的渲染原理简介"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://zhuanlan.zhihu.com/p/29418126",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的渲染：过程与原理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.zybuluo.com/yangfch3/note/671516",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器内核、JS 引擎、页面呈现原理及其优化"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://jartto.wang/2017/11/13/Exploring-the-principle-of-CSS-parsing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("探究 CSS 解析原理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/#Layered_representation",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的工作原理：新式网络浏览器幕后揭秘"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://github.com/lhyt/issue/issues/22",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器原理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.w3cplus.com/performance/understanding-the-critical-rendering-path.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解关键的渲染路径"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://github.com/berwin/Blog/issues/29",target:"_blank",rel:"noopener noreferrer"}},[t._v("关键渲染路径"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("但这一切都并不重要，重要的是我们可以通过这篇文章来学习 CSSOM 一些常见的特性，有利于我们更好的掌握 CSSOM 相关的特性和 API 所起的相关作用。")]),t._v(" "),a("h2",{attrs:{id:"使用-ele-style-设置元素行内样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-ele-style-设置元素行内样式"}},[t._v("#")]),t._v(" 使用 "),a("code",[t._v("ele.style")]),t._v(" 设置元素行内样式")]),t._v(" "),a("p",[t._v("在 Web 开发中，我们有的时候需要动态的控制 HTML 元素的样式，对于这样的场景，大多数都是通过 JavaScript 的 API 来控制 HTML 的 "),a("code",[t._v("style")]),t._v(" 属性。\b 面对这样的场景是使用 "),a("code",[t._v("ele.style")]),t._v(" 这个 API 来控制 "),a("code",[t._v("style")]),t._v(" 对象。我们可以通过在浏览器的控制台中，输入 "),a("code",[t._v("$0.style")]),t._v(" 可以输出对应元素的 "),a("code",[t._v("style")]),t._v(" 所对应的属性：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/style.png",alt:"img"}})]),t._v(" "),a("p",[t._v("比如我们要修改表单元素 "),a("code",[t._v("input")]),t._v(" 的背景颜色，我们可以这么做：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),t._v("\n")])])]),a("p",[t._v("这样元素 "),a("code",[t._v("input")]),t._v(" 自动加下了 "),a("code",[t._v("style")]),t._v(" 属性，而且值为 "),a("code",[t._v("background-color: green")]),t._v(" 。同时表单的背景颜色变成了 "),a("code",[t._v("green")]),t._v(" ：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/style%E4%BD%BF%E7%94%A8.png",alt:"img"}})]),t._v(" "),a("p",[a("code",[t._v("$0")]),t._v(" 是浏览器调试器中的一个技巧，指定是选择中的元素。在实际使用的时候，可以通过 JavaScript 选择器相关的 API 来获取你想要的 DOM 元素。最为常见的就是使用 "),a("code",[t._v("getElement*")]),t._v(" 和 "),a("code",[t._v("querySelector*")]),t._v(" API，有关于这方面更为详细的介绍，可以阅读 DOM 系列中的《 "),a("a",{attrs:{href:"http://www.w3cplus.com/javascript/searching-elements-dom.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("getElement*")]),t._v(" 和 "),a("code",[t._v("querySelector*")]),t._v(" "),a("OutboundLink")],1),t._v("》一文。")]),t._v(" "),a("p",[t._v("也就是说，我们可以使用相同的格式添加或更改页面上任何对象的 CSS： "),a("strong",[a("code",[t._v("ele.style.propertyName")])]),t._v(" ，其中 "),a("code",[t._v("ele")]),t._v(" 指的是 DOM 元素， "),a("code",[t._v("propertyName")]),t._v(" 指的是希望给 "),a("code",[t._v("ele")]),t._v(" 元素要添加的样式属性（ 记住，带有 "),a("code",[t._v("-")]),t._v(" 中划线的 CSS 属性需要改用陀峰形式，比如上面示例中的 "),a("code",[t._v("background-color")]),t._v(" 属性要写成 "),a("code",[t._v("backgroundColor")]),t._v(" ）。")]),t._v(" "),a("p",[t._v("注意，在动态设置 "),a("code",[t._v("float")]),t._v(" 属性时，需要使用 "),a("code",[t._v("cssFloat")]),t._v(" ，这是因为 "),a("code",[t._v("float")]),t._v(" 是 JavaScript 中的一个关键词。这个有点类似于 "),a("code",[t._v("getAttribute()")]),t._v(" 给 HTML 元素设置 "),a("code",[t._v("for")]),t._v(" 属性时，需要使用 "),a("code",[t._v("htmlFor")]),t._v(" 。")]),t._v(" "),a("p",[t._v("这种方式是使用 JavaScript 给 DOM 元素设置样式最简单的方法。但是以这种方式给 DOM 元素设置样式有一个最大的局限性： "),a("strong",[t._v("只能给 DOM 元素添加内联样式")]),t._v(" 。同样的，如果我们想获取一个 DOM 元素的内联样式中某个属性的值时，也可以采用这种方式：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => green")]),t._v("\n")])])]),a("p",[t._v("当然，通过上面方式获取 DOM 元素内联样式对应属性的值时，有个前提条件，那就是该元素定义了该内联样式。如果未指定（定义）该样式，那么将不会返回任何值：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ""')]),t._v("\n")])])]),a("p",[t._v("在 "),a("a",{attrs:{href:"http://developers.google.com/web/updates/2016/05/houdini",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS Houdini"),a("OutboundLink")],1),t._v(" 中的 "),a("a",{attrs:{href:"http://drafts.css-houdini.org/css-typed-om/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSSOM"),a("OutboundLink")],1),t._v(" ，我们可以使用 "),a("code",[t._v(".attributeStyleMap")]),t._v(" 属性来替代 "),a("code",[t._v("ele.style")]),t._v(" 。可以使用 "),a("code",[t._v("ele.attributeStyleMap.set(property, value)")]),t._v(" 来设置元素内联样式：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("attributeStyleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其得到的效果和 "),a("code",[t._v("ele.style.property = value")]),t._v(" 等同的效果。另外， "),a("code",[t._v(".attributeStyleMap")]),t._v(" 类似于 Map 对象，所以它们支持对象常有的一些方法，比如 "),a("code",[t._v("get")]),t._v(" 、 "),a("code",[t._v("set")]),t._v(" 、 "),a("code",[t._v("keys")]),t._v(" 、 "),a("code",[t._v("values")]),t._v(" 和 "),a("code",[t._v("entry")]),t._v(" 等。这样让我们的工作也变得更为灵活：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("attributeStyleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置background-color的值为green")]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("attributeStyleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("attributeStyleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("attributeStyleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 删除background-color")]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("attributeStyleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 删除所有样式")]),t._v("\n")])])]),a("h2",{attrs:{id:"获取计算样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取计算样式"}},[t._v("#")]),t._v(" 获取计算样式")]),t._v(" "),a("p",[t._v("我们可以使用 "),a("code",[t._v("window.getComputedStyle()")]),t._v(" 方法获取元素上任何 CSS 的计算值。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/getComputedStyle.png",alt:"img"}})]),t._v(" "),a("p",[t._v("在浏览器的 "),a("strong",[t._v("Computed")]),t._v(" 一项中，我们可以查看到任何元素具有的可计算的样式。如上图所示。那么我们可以通过 "),a("code",[t._v("window.getComputedStyle()")]),t._v(" 方法获取相应的计算样式，比如像下面这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "rgb(0, 128, 0)"')]),t._v("\n")])])]),a("p",[t._v("上面只是获取了其中一个计算样式值。除了上述的方式，我们还可以通过其他的方式来获取，比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("而在新的 CSSOM 中有一个新的 API，可以让我们获取计算值。比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computedStyleMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'opacity'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 0.5")]),t._v("\n")])])]),a("p",[t._v("注意， "),a("code",[t._v("window.getComputedStyle()")]),t._v(" 和 "),a("code",[t._v("ele.computedStyleMap()")]),t._v(" 的差别是，前者返回的是解析值，而后值返回计算值。类如，如果你的样式中有一个这样的值， "),a("code",[t._v("width: 50%")]),t._v(" ，那么在 "),a("strong",[t._v("Typed OM")]),t._v(" 中将保留百分值（ "),a("code",[t._v("width: 50%")]),t._v(" ）;而 CSSOM 中返回的是解析值（ "),a("code",[t._v("width: 200px")]),t._v(" ）。")]),t._v(" "),a("p",[t._v("上面示例中， "),a("code",[t._v("window.getComputedStyle()")]),t._v(" 方法只传了一个参数，对于普通元素可以省略第二个参数，或者显示的传一个 "),a("code",[t._v("null")]),t._v(" 值：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其实，它有一个小细节，它允许你检索伪元素的样式信息：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'::before'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"cssstyledeclaration-相关-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cssstyledeclaration-相关-api"}},[t._v("#")]),t._v(" CSSStyleDeclaration 相关 API")]),t._v(" "),a("p",[t._v("通过前面的内容我们知道如何通过 "),a("code",[t._v("style")]),t._v(" 对象或使用 "),a("code",[t._v("getComputedStyle()")]),t._v(" 访问样式属性，这两个其实是 "),a("code",[t._v("CSSStyleDeclaration")]),t._v(" 接口。也就是说，我们可以像下面这样将 "),a("code",[t._v("body")]),t._v(" 元素上返回一个 "),a("code",[t._v("CSSStyleDeclaration")]),t._v(" 对象：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("我们可以在浏览器控制台中看到上面的命令将会输出的内容：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/CSSStyleDeclaration%E6%8E%A5%E5%8F%A3.png",alt:"img"}})]),t._v(" "),a("p",[t._v("这两者有点不同，前者其实是前面介绍的 "),a("code",[t._v("ele.style")]),t._v(" ，它可以获取和设置元素 CSS 属性的值，只不过只是给元素添加内联样式；但 "),a("code",[t._v("window.getComputedStyle(ele)")]),t._v(" 获取的是只读值。")]),t._v(" "),a("p",[a("code",[t._v("CSSStyleDeclaration")]),t._v(" 有几个常用的方法：")]),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("setProperty()")])]),t._v(" ：给一个声明了 CSS 样式的对象设置一个新的值")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("getPropertyValue()")])]),t._v(" ：用来获取 CSS 属性的值")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("item()")])]),t._v(" ：通过下标从 "),a("code",[t._v("CSSStyleDeclaration")]),t._v(" 返回一个 CSS 属性值")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("getPropertyPriority()")])]),t._v(" ：根据传入的 CSS 属性，返回一个 "),a("code",[t._v("DOMString")]),t._v(" 来表示该属性的权重（优先级）")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("removeProperty()")])]),t._v(" ：移除 "),a("code",[t._v("style")]),t._v(" 对象的一个属性")])]),t._v(" "),a("p",[t._v("接下来分别看这几个方法是如何使用的。")]),t._v(" "),a("h3",{attrs:{id:"setproperty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setproperty"}},[t._v("#")]),t._v(" "),a("code",[t._v("setProperty()")])]),t._v(" "),a("p",[t._v("该方法可以给 CSS 的属性设置一个新的值。可以像下面这样使用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中 "),a("code",[t._v("property")]),t._v(" 指的是 CSS 属性， "),a("code",[t._v("value")]),t._v(" 设置的属性的值， "),a("code",[t._v("priority")]),t._v(" 允许设置 CSS 的权重，即 "),a("code",[t._v("!important")]),t._v(" 。比如下面这个示例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "rgb(255, 0, 0)"')]),t._v("\n")])])]),a("h3",{attrs:{id:"getpropertyvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getpropertyvalue"}},[t._v("#")]),t._v(" "),a("code",[t._v("getPropertyValue()")])]),t._v(" "),a("p",[t._v("该方法可以用来获取 CSS 属性的值，比如像下面这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "red"')]),t._v("\n")])])]),a("p",[t._v("使用该方法时，如果 "),a("code",[t._v("getComputedStyle")]),t._v(" 没有给元素指定属性时，它将返回一个空字符串：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ""')]),t._v("\n")])])]),a("h3",{attrs:{id:"item"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item"}},[t._v("#")]),t._v(" "),a("code",[t._v("item()")])]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("CSSStyleDeclaration")]),t._v(" 的 "),a("code",[t._v("item()")]),t._v(" 方式可以让我们通过下标从 "),a("code",[t._v("CSSStyleDeclaration")]),t._v(" 返回一个 CSS 属性值。其使用格式：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中 "),a("code",[t._v("index")]),t._v(" 是需要查找节点的索引，索引下标从 "),a("code",[t._v("0")]),t._v(" 开始。如果我们要获取元素行内样式中所有的属性时可以通过下面的方式遍历出来：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => clear")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => position")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => zoom")]),t._v("\n")])])]),a("p",[t._v("这里有一个小细节， "),a("code",[t._v("item()")]),t._v(" 方法只要传入参数，这个方法就不会抛出异常，当传入的下标越界时会返回空字符串，当未传入参数时会抛出一个 "),a("code",[t._v("TypeError")]),t._v(" 。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/item.png",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"getpropertypriority"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getpropertypriority"}},[t._v("#")]),t._v(" "),a("code",[t._v("getPropertyPriority()")])]),t._v(" "),a("p",[a("code",[t._v("getPropertyPriority()")]),t._v(" 方法是一个很有意思的方法。这个方法会根据传入的 CSS 属性，返回一个 "),a("code",[t._v("DOMString")]),t._v(" 来表示该属性的优先级。如果有的话，则返回 "),a("code",[t._v("important")]),t._v(" ；如果不存在的话，返回空字符串。")]),t._v(" "),a("p",[t._v("在介绍 "),a("code",[t._v("style.setProperty()")]),t._v(" 方法的时候，我们在给其传参数的时候，第三个参数就可以指定属性的优先级。或者在原有的 CSS 中带有 "),a("code",[t._v("!important")]),t._v(" 时，该方法也会返回 "),a("code",[t._v("important")]),t._v(" 字符串。比如下面这个小示例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'border'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2px solid red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'important'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'border'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "important"')]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'background-color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ""')]),t._v("\n")])])]),a("p",[t._v("上面的示例中，第一行代码和第二行代码使用了 "),a("code",[t._v("ele.style.setProperty()")]),t._v(" 方式给元素分别设置了 "),a("code",[t._v("border")]),t._v(" 和 "),a("code",[t._v("background-color")]),t._v(" 两个属性，不同之处是，第一个传了第三个参数 "),a("code",[t._v("priority")]),t._v(" （即 "),a("code",[t._v('"important"')]),t._v(" ）。这个参数就相当于在给属性值后面附加了 "),a("code",[t._v("!important")]),t._v(" 关键字。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/getPropertyPriority.png",alt:"img"}})]),t._v(" "),a("p",[t._v("在用 "),a("code",[t._v("!important")]),t._v(" 设置属性之后，使用 "),a("code",[t._v("ele.style.getPropertyPriority()")]),t._v(" 方法检查该属性的优先级。前面也提到过了，如果元素的 "),a("code",[t._v("style")]),t._v(" 中的属性带有 "),a("code",[t._v("!important")]),t._v(" 值，也可以使用该方法进行检查。")]),t._v(" "),a("p",[t._v("这里有一个小细节需要注意，如果内联样式中的简写属性，比如 "),a("code",[t._v("margin")]),t._v(" 属性值带有 "),a("code",[t._v("!important")]),t._v(" 关键词，如果我们使用 "),a("code",[t._v("ele.style.getPropertyPriority()")]),t._v(" 在检查简写属性或示简写的属性的时，都将返回 "),a("code",[t._v("important")]),t._v(" 的值。比如下面的代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// =>  "important"')]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-top'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// =>  "important"')]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-right'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// =>  "important"')]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-bottom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// =>  "important"')]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyPriority")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-left'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// =>  "important"')]),t._v("\n")])])]),a("h3",{attrs:{id:"removeproperty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#removeproperty"}},[t._v("#")]),t._v(" "),a("code",[t._v("removeProperty()")])]),t._v(" "),a("p",[t._v("该方法可以移除 "),a("code",[t._v("style")]),t._v(" 对象的一个属性：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ""')]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPropertyValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ""')]),t._v("\n")])])]),a("p",[t._v("这个时候，DOM 元素中 "),a("code",[t._v("style")]),t._v(" 里的 "),a("code",[t._v("margin")]),t._v(" 属性被移除了，比如下图所示的结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/removeProperty.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"cssstylesheet-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cssstylesheet-接口"}},[t._v("#")]),t._v(" CSSStyleSheet 接口")]),t._v(" "),a("p",[t._v("前面我们所聊的内容大部分都是关于元素内联样式（通常局限性较大）和计算样式（通常很有用，但过于具体）。接下来要聊的 "),a("code",[t._v("CSSStyleSheet")]),t._v(" 相关的 API 是一个更有用的 API，它允许检索具有可读和可写值的样式表，而不仅仅是内联样式表。简单地说，该接口代表一个单一的 CSS 样式表。")]),t._v(" "),a("p",[t._v("在写 Web 页面的时候，我们一直都提倡将页面的样式规则放入到一个单一（或多个）样式文件中，或者 `` 标签中。这两种方式写样式都会包含一组 CSS 规则。每条 CSS 规则可以通过与之相关联的对象进行操作，这个关联对象实现了 "),a("code",[t._v("CSSStyleRule")]),t._v(" 接口，而 "),a("code",[t._v("CSSStyleRule")]),t._v(" 反过来实现了 "),a("code",[t._v("CSSRule")]),t._v(" 。 "),a("code",[t._v("CSSStyleSheet")]),t._v(" 允许你检测与修改和它相关联的的样式表，包括样式表的规则列表。")]),t._v(" "),a("p",[t._v("实际上， "),a("code",[t._v("CSSStyleSheet")]),t._v(" 也实现了更为通用的 "),a("code",[t._v("StyleSheet")]),t._v(" 接口。实现一个 "),a("code",[t._v("document")]),t._v(" 的样式表的 "),a("code",[t._v("CSSStyleSheet")]),t._v(" 列表可以过 "),a("code",[t._v("document.styleSheet")]),t._v(" 属性获取(这个 "),a("code",[t._v("document")]),t._v(" 通过外联样式表或内嵌的 "),a("code",[t._v("style")]),t._v(" 元素定义样式)。")]),t._v(" "),a("p",[t._v("比如，我们可以使用下面的方式来查看一个页面（文档）中有多少样式表：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 5")]),t._v("\n")])])]),a("p",[t._v("上面代码查询出 W3cplus 网站总共用了多少个 CSS 样式表（样式文件）：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/styleSheets%E4%BD%BF%E7%94%A81.png",alt:"img"}})]),t._v(" "),a("p",[t._v("同样的，我们可以使用下标索引引用文档中的任何样式表，比如：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/styleSheets%E4%BD%BF%E7%94%A82.png",alt:"img"}})]),t._v(" "),a("p",[t._v("我们也可遍历出来所有运用到的样式表的相关信息：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/basic/css/styleSheets%E4%BD%BF%E7%94%A83.png",alt:"img"}})]),t._v(" "),a("p",[t._v("在上面两个截图中，我们都可以看到 "),a("code",[t._v("cssRules")]),t._v(" 和 "),a("code",[t._v("ownerRule")]),t._v(" 两个属性：")]),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("cssRules")])]),t._v(" ：返回样式表中 CSS 规则的 "),a("code",[t._v("CSSRuleList")]),t._v(" 对象")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("ownerRule")])]),t._v(" ：如果一个样式表示通过 "),a("code",[t._v("@import")]),t._v(" 规则引入 "),a("code",[t._v("document")]),t._v(" 的，则 "),a("code",[t._v("ownerRule")]),t._v(" 将返回那个 "),a("code",[t._v("CSSImportRule")]),t._v(" 对象，否则返回 "),a("code",[t._v("null")])])]),t._v(" "),a("p",[t._v("其中 "),a("code",[t._v("cssRules")]),t._v(" 属性是较为有用的。此属性提供样式表中包含的所有 CSS 规则（包括声明块、 "),a("code",[t._v("at-rules")]),t._v(" 和媒体查询等）的列表。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/cssRules.png",alt:"img"}})]),t._v(" "),a("p",[t._v("在这个示例中，总共有 "),a("code",[t._v("116")]),t._v(" 个 CSS 规则。")]),t._v(" "),a("p",[t._v("在接下来的部分中，我们将详细介绍如何使用这个 API 来操作和读取外部样式表中的样式。比如我们要把第一个 "),a("code",[t._v(".css")]),t._v(" 文件中所有选择器打印出来，我们就可以像下面这样做：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myRules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssRules\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" myRules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectorText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("打印出来的结果类似下图这样：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/cssRules2.png",alt:"img"}})]),t._v(" "),a("p",[t._v("在上面的代码中需要注意两件事。首先，把第一个样式表中的 "),a("code",[t._v("cssRules")]),t._v(" 对象赋值给一个变量缓存起来，然后使用 "),a("code",[t._v("for... of")]),t._v(" 循环来循环该对象中的所有规则，检查每个规则的类型。在这种情况之下，我们需要的规则类型( "),a("code",[t._v("type")]),t._v(" )是 "),a("code",[t._v("1")]),t._v(" ，它表示 "),a("code",[t._v("STYLE_RULE")]),t._v(" 常量。其他常量包括 "),a("code",[t._v("IMPORT_RULE")]),t._v(" (对应的 "),a("code",[t._v("type = 3")]),t._v(" )、 "),a("code",[t._v("MEDIA_RULE")]),t._v(" （对应的 "),a("code",[t._v("type=4")]),t._v(" ）和 "),a("code",[t._v("KEYFRAMES_RULE")]),t._v(" （对应的 "),a("code",[t._v("type=7")]),t._v(" ）。更多的类型如下图所示， "),a("a",{attrs:{href:"http://developer.mozilla.org/zh-CN/docs/Web/API/CSSRule#Type_constants",target:"_blank",rel:"noopener noreferrer"}},[t._v("也可以在 MDN 上查阅"),a("OutboundLink")],1),t._v(" ：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/cssRules%E7%B1%BB%E5%9E%8B.png",alt:"img"}})]),t._v(" "),a("p",[t._v("同样的，我们可以使用类似的方法打印出 "),a("code",[t._v("@media")]),t._v(" 和 "),a("code",[t._v("@keyframes")]),t._v(" 里面相关的信息。也可以以类似方式打印出类似 "),a("code",[t._v("selectorText")]),t._v(" 相关的信息，比如 "),a("code",[t._v("style")]),t._v(" 、 "),a("code",[t._v("styleMap")]),t._v(" 和 "),a("code",[t._v("cssText")]),t._v(" 等。比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myRules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssRules\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" myRules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("打印出来的结果类似下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/cssRules3.png",alt:"img"}})]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("CSSStyleSheet")]),t._v(" 接口中除了上面提到的两个常见属性之外，还有两个方法，允许你从样式表中添加或删除整个规则。")]),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("insertRule")])]),t._v(" ：向样式表中插入一条新规则")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("deleteRule")])]),t._v(" ：从当前样式表对象中删除指定的样式规则")])]),t._v(" "),a("p",[t._v("比如我们要给第一个样式表中添加一条新的样式规则：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstStylesheet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstStylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssRules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 116")]),t._v("\n\nfirstStylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("body {\n        background-color: orange;\n        font-size: 3em;\n        padding: 2em;\n    }")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    firstStylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssRules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这个时候在样式表中添加了下面的样式：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/insertRule.png",alt:"img"}})]),t._v(" "),a("p",[t._v("我也可以通过下面的代码，来验证：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" firstStylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssRules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/basic/css/cssRules4.png",alt:"img"}})]),t._v(" "),a("p",[t._v("其 "),a("code",[t._v("cssRules")]),t._v(" 的 "),a("code",[t._v("length")]),t._v(" 值由 "),a("code",[t._v("116")]),t._v(" 变成 "),a("code",[t._v("117")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstStylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssRules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 117")]),t._v("\n")])])]),a("p",[a("code",[t._v("stylesheet.insertRule()")]),t._v(" 方法接受两值参数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("rule\nindex\n")])])]),a("p",[t._v("注意，对于普通样式规则来说,要插入的字符串应该包含选择器和样式声明。对于 "),a("code",[t._v("@")]),t._v(" 规则来说，要插入的字符串应该包含 "),a("code",[t._v("@")]),t._v(" 标识符和样式规则的内容。另外， "),a("code",[t._v("index")]),t._v(" 未设置的话，则默认为 "),a("code",[t._v("0")]),t._v(" ，新添加的 "),a("code",[t._v("rule")]),t._v(" 将会插入到样式表的最前面，如果 "),a("code",[t._v("index")]),t._v(" 索引值恰好大于 "),a("code",[t._v("cssRules.length")]),t._v(" ，将会抛出一个错误。")]),t._v(" "),a("p",[a("code",[t._v("deleteRule()")]),t._v(" 方法相对来说更为容易，它只接受一个参数 "),a("code",[t._v("index")]),t._v(" 。 "),a("code",[t._v("index")]),t._v(" 就是一个数字，用来指定样式规则的位置。作为参数传入的所选 "),a("code",[t._v("index")]),t._v(" 必须小于 "),a("code",[t._v("cssRules.length")]),t._v(" ，否则将抛出错误。比如我们现在要删除刚才新增加的样式规则：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们就可以像下面这样来删除这条规则：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("firstStylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("116")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对应的样式规则就删除了。如果把 "),a("code",[t._v("116")]),t._v(" 换成 "),a("code",[t._v("117")]),t._v(" 就会报错：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/basic/css/deleteRule.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"cssom-的未来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cssom-的未来"}},[t._v("#")]),t._v(" CSSOM 的未来")]),t._v(" "),a("p",[t._v("在介绍 "),a("code",[t._v("ele.style")]),t._v(" 这个 API 的时候，简单的提到过， "),a("a",{attrs:{href:"http://drafts.css-houdini.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS Houdini"),a("OutboundLink")],1),t._v(" 中提到了新的 CSSOM（即 "),a("a",{attrs:{href:"http://drafts.css-houdini.org/css-typed-om/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS Typed OM"),a("OutboundLink")],1),t._v(" ）。新的 CSSOM 相关的 API 能提供更大的优势。有关于这方面的介绍，可以阅读 Google 开发者文档中 "),a("a",{attrs:{href:"http://developers.google.com/web/resources/contributors/ericbidelman",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Eric Bidelman"),a("OutboundLink")],1),t._v(" 写的 "),a("a",{attrs:{href:"http://developers.google.com/web/updates/2018/03/cssom",target:"_blank",rel:"noopener noreferrer"}},[t._v("博文"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("通过 JavaScript 中的相关 API 来操作 CSS 样式表肯定不是每个项目中都会用到的。但文章中提到的一些 API 的的确确可以帮助我们实现一些复杂交互。因此，掌握这些 API 是很有必要的，同时能加强我们处理业务的能力。")]),t._v(" "),a("h2",{attrs:{id:"扩展阅读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读"}},[t._v("#")]),t._v(" 扩展阅读")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://css-tricks.com/an-introduction-and-guide-to-the-css-object-model-cssom/",target:"_blank",rel:"noopener noreferrer"}},[t._v("An Introduction and Guide to the CSS Object Model"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://developers.google.com/web/updates/2018/03/cssom",target:"_blank",rel:"noopener noreferrer"}},[t._v("Working with the new CSS Typed Object Model"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.w3.org/TR/cssom-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS Object Model"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.miaoroom.com/code/cssom-css-typed-om.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("更高效、更安全地操作 CSSOM ：CSS Typed OM"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.zhangxinxu.com/wordpress/?p=1907",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSSOM 视图模式(CSSOM View Module)相关整理"),a("OutboundLink")],1)])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);